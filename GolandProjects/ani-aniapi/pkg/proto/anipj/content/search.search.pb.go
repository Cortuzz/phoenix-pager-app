// Generated by Anipj.Protobuf.Plugins.Search

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.1
// source: anipj/content/search.search.proto

package content

import (
	search "anipj/protobuf/search"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TitleSearchFilter_Condition_Id_Function int32

const (
	TitleSearchFilter_Condition_Id_UNSPECIFIED    TitleSearchFilter_Condition_Id_Function = 0
	TitleSearchFilter_Condition_Id_EQUALS         TitleSearchFilter_Condition_Id_Function = 1
	TitleSearchFilter_Condition_Id_GREATER        TitleSearchFilter_Condition_Id_Function = 3
	TitleSearchFilter_Condition_Id_GREATER_EQUALS TitleSearchFilter_Condition_Id_Function = 4
	TitleSearchFilter_Condition_Id_LESS           TitleSearchFilter_Condition_Id_Function = 5
	TitleSearchFilter_Condition_Id_LESS_EQUALS    TitleSearchFilter_Condition_Id_Function = 6
)

// Enum value maps for TitleSearchFilter_Condition_Id_Function.
var (
	TitleSearchFilter_Condition_Id_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "EQUALS",
		3: "GREATER",
		4: "GREATER_EQUALS",
		5: "LESS",
		6: "LESS_EQUALS",
	}
	TitleSearchFilter_Condition_Id_Function_value = map[string]int32{
		"UNSPECIFIED":    0,
		"EQUALS":         1,
		"GREATER":        3,
		"GREATER_EQUALS": 4,
		"LESS":           5,
		"LESS_EQUALS":    6,
	}
)

func (x TitleSearchFilter_Condition_Id_Function) Enum() *TitleSearchFilter_Condition_Id_Function {
	p := new(TitleSearchFilter_Condition_Id_Function)
	*p = x
	return p
}

func (x TitleSearchFilter_Condition_Id_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchFilter_Condition_Id_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[0].Descriptor()
}

func (TitleSearchFilter_Condition_Id_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[0]
}

func (x TitleSearchFilter_Condition_Id_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchFilter_Condition_Id_Function.Descriptor instead.
func (TitleSearchFilter_Condition_Id_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

type TitleSearchFilter_Condition_IdRepeated_Function int32

const (
	TitleSearchFilter_Condition_IdRepeated_UNSPECIFIED TitleSearchFilter_Condition_IdRepeated_Function = 0
	TitleSearchFilter_Condition_IdRepeated_IN          TitleSearchFilter_Condition_IdRepeated_Function = 2
)

// Enum value maps for TitleSearchFilter_Condition_IdRepeated_Function.
var (
	TitleSearchFilter_Condition_IdRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	TitleSearchFilter_Condition_IdRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x TitleSearchFilter_Condition_IdRepeated_Function) Enum() *TitleSearchFilter_Condition_IdRepeated_Function {
	p := new(TitleSearchFilter_Condition_IdRepeated_Function)
	*p = x
	return p
}

func (x TitleSearchFilter_Condition_IdRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchFilter_Condition_IdRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[1].Descriptor()
}

func (TitleSearchFilter_Condition_IdRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[1]
}

func (x TitleSearchFilter_Condition_IdRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchFilter_Condition_IdRepeated_Function.Descriptor instead.
func (TitleSearchFilter_Condition_IdRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 1, 0}
}

type TitleSearchFilter_Condition_FranchiseId_Function int32

const (
	TitleSearchFilter_Condition_FranchiseId_UNSPECIFIED    TitleSearchFilter_Condition_FranchiseId_Function = 0
	TitleSearchFilter_Condition_FranchiseId_EQUALS         TitleSearchFilter_Condition_FranchiseId_Function = 1
	TitleSearchFilter_Condition_FranchiseId_GREATER        TitleSearchFilter_Condition_FranchiseId_Function = 3
	TitleSearchFilter_Condition_FranchiseId_GREATER_EQUALS TitleSearchFilter_Condition_FranchiseId_Function = 4
	TitleSearchFilter_Condition_FranchiseId_LESS           TitleSearchFilter_Condition_FranchiseId_Function = 5
	TitleSearchFilter_Condition_FranchiseId_LESS_EQUALS    TitleSearchFilter_Condition_FranchiseId_Function = 6
)

// Enum value maps for TitleSearchFilter_Condition_FranchiseId_Function.
var (
	TitleSearchFilter_Condition_FranchiseId_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "EQUALS",
		3: "GREATER",
		4: "GREATER_EQUALS",
		5: "LESS",
		6: "LESS_EQUALS",
	}
	TitleSearchFilter_Condition_FranchiseId_Function_value = map[string]int32{
		"UNSPECIFIED":    0,
		"EQUALS":         1,
		"GREATER":        3,
		"GREATER_EQUALS": 4,
		"LESS":           5,
		"LESS_EQUALS":    6,
	}
)

func (x TitleSearchFilter_Condition_FranchiseId_Function) Enum() *TitleSearchFilter_Condition_FranchiseId_Function {
	p := new(TitleSearchFilter_Condition_FranchiseId_Function)
	*p = x
	return p
}

func (x TitleSearchFilter_Condition_FranchiseId_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchFilter_Condition_FranchiseId_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[2].Descriptor()
}

func (TitleSearchFilter_Condition_FranchiseId_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[2]
}

func (x TitleSearchFilter_Condition_FranchiseId_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchFilter_Condition_FranchiseId_Function.Descriptor instead.
func (TitleSearchFilter_Condition_FranchiseId_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 2, 0}
}

type TitleSearchFilter_Condition_FranchiseIdRepeated_Function int32

const (
	TitleSearchFilter_Condition_FranchiseIdRepeated_UNSPECIFIED TitleSearchFilter_Condition_FranchiseIdRepeated_Function = 0
	TitleSearchFilter_Condition_FranchiseIdRepeated_IN          TitleSearchFilter_Condition_FranchiseIdRepeated_Function = 2
)

// Enum value maps for TitleSearchFilter_Condition_FranchiseIdRepeated_Function.
var (
	TitleSearchFilter_Condition_FranchiseIdRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	TitleSearchFilter_Condition_FranchiseIdRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x TitleSearchFilter_Condition_FranchiseIdRepeated_Function) Enum() *TitleSearchFilter_Condition_FranchiseIdRepeated_Function {
	p := new(TitleSearchFilter_Condition_FranchiseIdRepeated_Function)
	*p = x
	return p
}

func (x TitleSearchFilter_Condition_FranchiseIdRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchFilter_Condition_FranchiseIdRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[3].Descriptor()
}

func (TitleSearchFilter_Condition_FranchiseIdRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[3]
}

func (x TitleSearchFilter_Condition_FranchiseIdRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchFilter_Condition_FranchiseIdRepeated_Function.Descriptor instead.
func (TitleSearchFilter_Condition_FranchiseIdRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 3, 0}
}

type TitleSearchFilter_Condition_ProductionStatusRepeated_Function int32

const (
	TitleSearchFilter_Condition_ProductionStatusRepeated_UNSPECIFIED TitleSearchFilter_Condition_ProductionStatusRepeated_Function = 0
	TitleSearchFilter_Condition_ProductionStatusRepeated_IN          TitleSearchFilter_Condition_ProductionStatusRepeated_Function = 2
)

// Enum value maps for TitleSearchFilter_Condition_ProductionStatusRepeated_Function.
var (
	TitleSearchFilter_Condition_ProductionStatusRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	TitleSearchFilter_Condition_ProductionStatusRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x TitleSearchFilter_Condition_ProductionStatusRepeated_Function) Enum() *TitleSearchFilter_Condition_ProductionStatusRepeated_Function {
	p := new(TitleSearchFilter_Condition_ProductionStatusRepeated_Function)
	*p = x
	return p
}

func (x TitleSearchFilter_Condition_ProductionStatusRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchFilter_Condition_ProductionStatusRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[4].Descriptor()
}

func (TitleSearchFilter_Condition_ProductionStatusRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[4]
}

func (x TitleSearchFilter_Condition_ProductionStatusRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchFilter_Condition_ProductionStatusRepeated_Function.Descriptor instead.
func (TitleSearchFilter_Condition_ProductionStatusRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 4, 0}
}

type TitleSearchFilter_Condition_AnimeKindRepeated_Function int32

const (
	TitleSearchFilter_Condition_AnimeKindRepeated_UNSPECIFIED TitleSearchFilter_Condition_AnimeKindRepeated_Function = 0
	TitleSearchFilter_Condition_AnimeKindRepeated_IN          TitleSearchFilter_Condition_AnimeKindRepeated_Function = 2
)

// Enum value maps for TitleSearchFilter_Condition_AnimeKindRepeated_Function.
var (
	TitleSearchFilter_Condition_AnimeKindRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	TitleSearchFilter_Condition_AnimeKindRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x TitleSearchFilter_Condition_AnimeKindRepeated_Function) Enum() *TitleSearchFilter_Condition_AnimeKindRepeated_Function {
	p := new(TitleSearchFilter_Condition_AnimeKindRepeated_Function)
	*p = x
	return p
}

func (x TitleSearchFilter_Condition_AnimeKindRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchFilter_Condition_AnimeKindRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[5].Descriptor()
}

func (TitleSearchFilter_Condition_AnimeKindRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[5]
}

func (x TitleSearchFilter_Condition_AnimeKindRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchFilter_Condition_AnimeKindRepeated_Function.Descriptor instead.
func (TitleSearchFilter_Condition_AnimeKindRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 5, 0}
}

type TitleSearchFilter_Condition_ReleasedAt_Function int32

const (
	TitleSearchFilter_Condition_ReleasedAt_UNSPECIFIED    TitleSearchFilter_Condition_ReleasedAt_Function = 0
	TitleSearchFilter_Condition_ReleasedAt_EQUALS         TitleSearchFilter_Condition_ReleasedAt_Function = 1
	TitleSearchFilter_Condition_ReleasedAt_GREATER        TitleSearchFilter_Condition_ReleasedAt_Function = 3
	TitleSearchFilter_Condition_ReleasedAt_GREATER_EQUALS TitleSearchFilter_Condition_ReleasedAt_Function = 4
	TitleSearchFilter_Condition_ReleasedAt_LESS           TitleSearchFilter_Condition_ReleasedAt_Function = 5
	TitleSearchFilter_Condition_ReleasedAt_LESS_EQUALS    TitleSearchFilter_Condition_ReleasedAt_Function = 6
)

// Enum value maps for TitleSearchFilter_Condition_ReleasedAt_Function.
var (
	TitleSearchFilter_Condition_ReleasedAt_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "EQUALS",
		3: "GREATER",
		4: "GREATER_EQUALS",
		5: "LESS",
		6: "LESS_EQUALS",
	}
	TitleSearchFilter_Condition_ReleasedAt_Function_value = map[string]int32{
		"UNSPECIFIED":    0,
		"EQUALS":         1,
		"GREATER":        3,
		"GREATER_EQUALS": 4,
		"LESS":           5,
		"LESS_EQUALS":    6,
	}
)

func (x TitleSearchFilter_Condition_ReleasedAt_Function) Enum() *TitleSearchFilter_Condition_ReleasedAt_Function {
	p := new(TitleSearchFilter_Condition_ReleasedAt_Function)
	*p = x
	return p
}

func (x TitleSearchFilter_Condition_ReleasedAt_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchFilter_Condition_ReleasedAt_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[6].Descriptor()
}

func (TitleSearchFilter_Condition_ReleasedAt_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[6]
}

func (x TitleSearchFilter_Condition_ReleasedAt_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchFilter_Condition_ReleasedAt_Function.Descriptor instead.
func (TitleSearchFilter_Condition_ReleasedAt_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 6, 0}
}

type TitleSearchFilter_Condition_AnyTag_Function int32

const (
	TitleSearchFilter_Condition_AnyTag_UNSPECIFIED    TitleSearchFilter_Condition_AnyTag_Function = 0
	TitleSearchFilter_Condition_AnyTag_EQUALS         TitleSearchFilter_Condition_AnyTag_Function = 1
	TitleSearchFilter_Condition_AnyTag_GREATER        TitleSearchFilter_Condition_AnyTag_Function = 3
	TitleSearchFilter_Condition_AnyTag_GREATER_EQUALS TitleSearchFilter_Condition_AnyTag_Function = 4
	TitleSearchFilter_Condition_AnyTag_LESS           TitleSearchFilter_Condition_AnyTag_Function = 5
	TitleSearchFilter_Condition_AnyTag_LESS_EQUALS    TitleSearchFilter_Condition_AnyTag_Function = 6
	TitleSearchFilter_Condition_AnyTag_REGEX          TitleSearchFilter_Condition_AnyTag_Function = 7
)

// Enum value maps for TitleSearchFilter_Condition_AnyTag_Function.
var (
	TitleSearchFilter_Condition_AnyTag_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "EQUALS",
		3: "GREATER",
		4: "GREATER_EQUALS",
		5: "LESS",
		6: "LESS_EQUALS",
		7: "REGEX",
	}
	TitleSearchFilter_Condition_AnyTag_Function_value = map[string]int32{
		"UNSPECIFIED":    0,
		"EQUALS":         1,
		"GREATER":        3,
		"GREATER_EQUALS": 4,
		"LESS":           5,
		"LESS_EQUALS":    6,
		"REGEX":          7,
	}
)

func (x TitleSearchFilter_Condition_AnyTag_Function) Enum() *TitleSearchFilter_Condition_AnyTag_Function {
	p := new(TitleSearchFilter_Condition_AnyTag_Function)
	*p = x
	return p
}

func (x TitleSearchFilter_Condition_AnyTag_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchFilter_Condition_AnyTag_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[7].Descriptor()
}

func (TitleSearchFilter_Condition_AnyTag_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[7]
}

func (x TitleSearchFilter_Condition_AnyTag_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchFilter_Condition_AnyTag_Function.Descriptor instead.
func (TitleSearchFilter_Condition_AnyTag_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 7, 0}
}

type TitleSearchFilter_Condition_AnyTagRepeated_Function int32

const (
	TitleSearchFilter_Condition_AnyTagRepeated_UNSPECIFIED TitleSearchFilter_Condition_AnyTagRepeated_Function = 0
	TitleSearchFilter_Condition_AnyTagRepeated_IN          TitleSearchFilter_Condition_AnyTagRepeated_Function = 2
)

// Enum value maps for TitleSearchFilter_Condition_AnyTagRepeated_Function.
var (
	TitleSearchFilter_Condition_AnyTagRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	TitleSearchFilter_Condition_AnyTagRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x TitleSearchFilter_Condition_AnyTagRepeated_Function) Enum() *TitleSearchFilter_Condition_AnyTagRepeated_Function {
	p := new(TitleSearchFilter_Condition_AnyTagRepeated_Function)
	*p = x
	return p
}

func (x TitleSearchFilter_Condition_AnyTagRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchFilter_Condition_AnyTagRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[8].Descriptor()
}

func (TitleSearchFilter_Condition_AnyTagRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[8]
}

func (x TitleSearchFilter_Condition_AnyTagRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchFilter_Condition_AnyTagRepeated_Function.Descriptor instead.
func (TitleSearchFilter_Condition_AnyTagRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 8, 0}
}

type TitleSearchOrdering_Field int32

const (
	TitleSearchOrdering_UNSPECIFIED       TitleSearchOrdering_Field = 0 // invalid
	TitleSearchOrdering_ID                TitleSearchOrdering_Field = 1
	TitleSearchOrdering_FRANCHISE_ID      TitleSearchOrdering_Field = 2
	TitleSearchOrdering_PRODUCTION_STATUS TitleSearchOrdering_Field = 3
	TitleSearchOrdering_ANIME_KIND        TitleSearchOrdering_Field = 4
	TitleSearchOrdering_RELEASED_AT       TitleSearchOrdering_Field = 5
)

// Enum value maps for TitleSearchOrdering_Field.
var (
	TitleSearchOrdering_Field_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ID",
		2: "FRANCHISE_ID",
		3: "PRODUCTION_STATUS",
		4: "ANIME_KIND",
		5: "RELEASED_AT",
	}
	TitleSearchOrdering_Field_value = map[string]int32{
		"UNSPECIFIED":       0,
		"ID":                1,
		"FRANCHISE_ID":      2,
		"PRODUCTION_STATUS": 3,
		"ANIME_KIND":        4,
		"RELEASED_AT":       5,
	}
)

func (x TitleSearchOrdering_Field) Enum() *TitleSearchOrdering_Field {
	p := new(TitleSearchOrdering_Field)
	*p = x
	return p
}

func (x TitleSearchOrdering_Field) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleSearchOrdering_Field) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[9].Descriptor()
}

func (TitleSearchOrdering_Field) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[9]
}

func (x TitleSearchOrdering_Field) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleSearchOrdering_Field.Descriptor instead.
func (TitleSearchOrdering_Field) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{1, 0}
}

type BaseSearchFilter_Condition_Id_Function int32

const (
	BaseSearchFilter_Condition_Id_UNSPECIFIED    BaseSearchFilter_Condition_Id_Function = 0
	BaseSearchFilter_Condition_Id_EQUALS         BaseSearchFilter_Condition_Id_Function = 1
	BaseSearchFilter_Condition_Id_GREATER        BaseSearchFilter_Condition_Id_Function = 3
	BaseSearchFilter_Condition_Id_GREATER_EQUALS BaseSearchFilter_Condition_Id_Function = 4
	BaseSearchFilter_Condition_Id_LESS           BaseSearchFilter_Condition_Id_Function = 5
	BaseSearchFilter_Condition_Id_LESS_EQUALS    BaseSearchFilter_Condition_Id_Function = 6
)

// Enum value maps for BaseSearchFilter_Condition_Id_Function.
var (
	BaseSearchFilter_Condition_Id_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "EQUALS",
		3: "GREATER",
		4: "GREATER_EQUALS",
		5: "LESS",
		6: "LESS_EQUALS",
	}
	BaseSearchFilter_Condition_Id_Function_value = map[string]int32{
		"UNSPECIFIED":    0,
		"EQUALS":         1,
		"GREATER":        3,
		"GREATER_EQUALS": 4,
		"LESS":           5,
		"LESS_EQUALS":    6,
	}
)

func (x BaseSearchFilter_Condition_Id_Function) Enum() *BaseSearchFilter_Condition_Id_Function {
	p := new(BaseSearchFilter_Condition_Id_Function)
	*p = x
	return p
}

func (x BaseSearchFilter_Condition_Id_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BaseSearchFilter_Condition_Id_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[10].Descriptor()
}

func (BaseSearchFilter_Condition_Id_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[10]
}

func (x BaseSearchFilter_Condition_Id_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BaseSearchFilter_Condition_Id_Function.Descriptor instead.
func (BaseSearchFilter_Condition_Id_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 1, 0, 0}
}

type BaseSearchFilter_Condition_IdRepeated_Function int32

const (
	BaseSearchFilter_Condition_IdRepeated_UNSPECIFIED BaseSearchFilter_Condition_IdRepeated_Function = 0
	BaseSearchFilter_Condition_IdRepeated_IN          BaseSearchFilter_Condition_IdRepeated_Function = 2
)

// Enum value maps for BaseSearchFilter_Condition_IdRepeated_Function.
var (
	BaseSearchFilter_Condition_IdRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	BaseSearchFilter_Condition_IdRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x BaseSearchFilter_Condition_IdRepeated_Function) Enum() *BaseSearchFilter_Condition_IdRepeated_Function {
	p := new(BaseSearchFilter_Condition_IdRepeated_Function)
	*p = x
	return p
}

func (x BaseSearchFilter_Condition_IdRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BaseSearchFilter_Condition_IdRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[11].Descriptor()
}

func (BaseSearchFilter_Condition_IdRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[11]
}

func (x BaseSearchFilter_Condition_IdRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BaseSearchFilter_Condition_IdRepeated_Function.Descriptor instead.
func (BaseSearchFilter_Condition_IdRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 1, 1, 0}
}

type BaseSearchFilter_Condition_AnyTag_Function int32

const (
	BaseSearchFilter_Condition_AnyTag_UNSPECIFIED    BaseSearchFilter_Condition_AnyTag_Function = 0
	BaseSearchFilter_Condition_AnyTag_EQUALS         BaseSearchFilter_Condition_AnyTag_Function = 1
	BaseSearchFilter_Condition_AnyTag_GREATER        BaseSearchFilter_Condition_AnyTag_Function = 3
	BaseSearchFilter_Condition_AnyTag_GREATER_EQUALS BaseSearchFilter_Condition_AnyTag_Function = 4
	BaseSearchFilter_Condition_AnyTag_LESS           BaseSearchFilter_Condition_AnyTag_Function = 5
	BaseSearchFilter_Condition_AnyTag_LESS_EQUALS    BaseSearchFilter_Condition_AnyTag_Function = 6
	BaseSearchFilter_Condition_AnyTag_REGEX          BaseSearchFilter_Condition_AnyTag_Function = 7
)

// Enum value maps for BaseSearchFilter_Condition_AnyTag_Function.
var (
	BaseSearchFilter_Condition_AnyTag_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "EQUALS",
		3: "GREATER",
		4: "GREATER_EQUALS",
		5: "LESS",
		6: "LESS_EQUALS",
		7: "REGEX",
	}
	BaseSearchFilter_Condition_AnyTag_Function_value = map[string]int32{
		"UNSPECIFIED":    0,
		"EQUALS":         1,
		"GREATER":        3,
		"GREATER_EQUALS": 4,
		"LESS":           5,
		"LESS_EQUALS":    6,
		"REGEX":          7,
	}
)

func (x BaseSearchFilter_Condition_AnyTag_Function) Enum() *BaseSearchFilter_Condition_AnyTag_Function {
	p := new(BaseSearchFilter_Condition_AnyTag_Function)
	*p = x
	return p
}

func (x BaseSearchFilter_Condition_AnyTag_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BaseSearchFilter_Condition_AnyTag_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[12].Descriptor()
}

func (BaseSearchFilter_Condition_AnyTag_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[12]
}

func (x BaseSearchFilter_Condition_AnyTag_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BaseSearchFilter_Condition_AnyTag_Function.Descriptor instead.
func (BaseSearchFilter_Condition_AnyTag_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 1, 2, 0}
}

type BaseSearchFilter_Condition_AnyTagRepeated_Function int32

const (
	BaseSearchFilter_Condition_AnyTagRepeated_UNSPECIFIED BaseSearchFilter_Condition_AnyTagRepeated_Function = 0
	BaseSearchFilter_Condition_AnyTagRepeated_IN          BaseSearchFilter_Condition_AnyTagRepeated_Function = 2
)

// Enum value maps for BaseSearchFilter_Condition_AnyTagRepeated_Function.
var (
	BaseSearchFilter_Condition_AnyTagRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	BaseSearchFilter_Condition_AnyTagRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x BaseSearchFilter_Condition_AnyTagRepeated_Function) Enum() *BaseSearchFilter_Condition_AnyTagRepeated_Function {
	p := new(BaseSearchFilter_Condition_AnyTagRepeated_Function)
	*p = x
	return p
}

func (x BaseSearchFilter_Condition_AnyTagRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BaseSearchFilter_Condition_AnyTagRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[13].Descriptor()
}

func (BaseSearchFilter_Condition_AnyTagRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[13]
}

func (x BaseSearchFilter_Condition_AnyTagRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BaseSearchFilter_Condition_AnyTagRepeated_Function.Descriptor instead.
func (BaseSearchFilter_Condition_AnyTagRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 1, 3, 0}
}

type BaseSearchOrdering_Field int32

const (
	BaseSearchOrdering_UNSPECIFIED BaseSearchOrdering_Field = 0 // invalid
	BaseSearchOrdering_ID          BaseSearchOrdering_Field = 1
)

// Enum value maps for BaseSearchOrdering_Field.
var (
	BaseSearchOrdering_Field_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ID",
	}
	BaseSearchOrdering_Field_value = map[string]int32{
		"UNSPECIFIED": 0,
		"ID":          1,
	}
)

func (x BaseSearchOrdering_Field) Enum() *BaseSearchOrdering_Field {
	p := new(BaseSearchOrdering_Field)
	*p = x
	return p
}

func (x BaseSearchOrdering_Field) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BaseSearchOrdering_Field) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[14].Descriptor()
}

func (BaseSearchOrdering_Field) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[14]
}

func (x BaseSearchOrdering_Field) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BaseSearchOrdering_Field.Descriptor instead.
func (BaseSearchOrdering_Field) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{4, 0}
}

type TagSearchFilter_Condition_Id_Function int32

const (
	TagSearchFilter_Condition_Id_UNSPECIFIED    TagSearchFilter_Condition_Id_Function = 0
	TagSearchFilter_Condition_Id_EQUALS         TagSearchFilter_Condition_Id_Function = 1
	TagSearchFilter_Condition_Id_GREATER        TagSearchFilter_Condition_Id_Function = 3
	TagSearchFilter_Condition_Id_GREATER_EQUALS TagSearchFilter_Condition_Id_Function = 4
	TagSearchFilter_Condition_Id_LESS           TagSearchFilter_Condition_Id_Function = 5
	TagSearchFilter_Condition_Id_LESS_EQUALS    TagSearchFilter_Condition_Id_Function = 6
	TagSearchFilter_Condition_Id_REGEX          TagSearchFilter_Condition_Id_Function = 7
)

// Enum value maps for TagSearchFilter_Condition_Id_Function.
var (
	TagSearchFilter_Condition_Id_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "EQUALS",
		3: "GREATER",
		4: "GREATER_EQUALS",
		5: "LESS",
		6: "LESS_EQUALS",
		7: "REGEX",
	}
	TagSearchFilter_Condition_Id_Function_value = map[string]int32{
		"UNSPECIFIED":    0,
		"EQUALS":         1,
		"GREATER":        3,
		"GREATER_EQUALS": 4,
		"LESS":           5,
		"LESS_EQUALS":    6,
		"REGEX":          7,
	}
)

func (x TagSearchFilter_Condition_Id_Function) Enum() *TagSearchFilter_Condition_Id_Function {
	p := new(TagSearchFilter_Condition_Id_Function)
	*p = x
	return p
}

func (x TagSearchFilter_Condition_Id_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagSearchFilter_Condition_Id_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[15].Descriptor()
}

func (TagSearchFilter_Condition_Id_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[15]
}

func (x TagSearchFilter_Condition_Id_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagSearchFilter_Condition_Id_Function.Descriptor instead.
func (TagSearchFilter_Condition_Id_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 0, 0}
}

type TagSearchFilter_Condition_IdRepeated_Function int32

const (
	TagSearchFilter_Condition_IdRepeated_UNSPECIFIED TagSearchFilter_Condition_IdRepeated_Function = 0
	TagSearchFilter_Condition_IdRepeated_IN          TagSearchFilter_Condition_IdRepeated_Function = 2
)

// Enum value maps for TagSearchFilter_Condition_IdRepeated_Function.
var (
	TagSearchFilter_Condition_IdRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	TagSearchFilter_Condition_IdRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x TagSearchFilter_Condition_IdRepeated_Function) Enum() *TagSearchFilter_Condition_IdRepeated_Function {
	p := new(TagSearchFilter_Condition_IdRepeated_Function)
	*p = x
	return p
}

func (x TagSearchFilter_Condition_IdRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagSearchFilter_Condition_IdRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[16].Descriptor()
}

func (TagSearchFilter_Condition_IdRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[16]
}

func (x TagSearchFilter_Condition_IdRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagSearchFilter_Condition_IdRepeated_Function.Descriptor instead.
func (TagSearchFilter_Condition_IdRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 1, 0}
}

type TagSearchFilter_Condition_SystemOnly_Function int32

const (
	TagSearchFilter_Condition_SystemOnly_UNSPECIFIED    TagSearchFilter_Condition_SystemOnly_Function = 0
	TagSearchFilter_Condition_SystemOnly_EQUALS         TagSearchFilter_Condition_SystemOnly_Function = 1
	TagSearchFilter_Condition_SystemOnly_GREATER        TagSearchFilter_Condition_SystemOnly_Function = 3
	TagSearchFilter_Condition_SystemOnly_GREATER_EQUALS TagSearchFilter_Condition_SystemOnly_Function = 4
	TagSearchFilter_Condition_SystemOnly_LESS           TagSearchFilter_Condition_SystemOnly_Function = 5
	TagSearchFilter_Condition_SystemOnly_LESS_EQUALS    TagSearchFilter_Condition_SystemOnly_Function = 6
)

// Enum value maps for TagSearchFilter_Condition_SystemOnly_Function.
var (
	TagSearchFilter_Condition_SystemOnly_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "EQUALS",
		3: "GREATER",
		4: "GREATER_EQUALS",
		5: "LESS",
		6: "LESS_EQUALS",
	}
	TagSearchFilter_Condition_SystemOnly_Function_value = map[string]int32{
		"UNSPECIFIED":    0,
		"EQUALS":         1,
		"GREATER":        3,
		"GREATER_EQUALS": 4,
		"LESS":           5,
		"LESS_EQUALS":    6,
	}
)

func (x TagSearchFilter_Condition_SystemOnly_Function) Enum() *TagSearchFilter_Condition_SystemOnly_Function {
	p := new(TagSearchFilter_Condition_SystemOnly_Function)
	*p = x
	return p
}

func (x TagSearchFilter_Condition_SystemOnly_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagSearchFilter_Condition_SystemOnly_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[17].Descriptor()
}

func (TagSearchFilter_Condition_SystemOnly_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[17]
}

func (x TagSearchFilter_Condition_SystemOnly_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagSearchFilter_Condition_SystemOnly_Function.Descriptor instead.
func (TagSearchFilter_Condition_SystemOnly_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 2, 0}
}

type TagSearchFilter_Condition_SystemOnlyRepeated_Function int32

const (
	TagSearchFilter_Condition_SystemOnlyRepeated_UNSPECIFIED TagSearchFilter_Condition_SystemOnlyRepeated_Function = 0
	TagSearchFilter_Condition_SystemOnlyRepeated_IN          TagSearchFilter_Condition_SystemOnlyRepeated_Function = 2
)

// Enum value maps for TagSearchFilter_Condition_SystemOnlyRepeated_Function.
var (
	TagSearchFilter_Condition_SystemOnlyRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	TagSearchFilter_Condition_SystemOnlyRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x TagSearchFilter_Condition_SystemOnlyRepeated_Function) Enum() *TagSearchFilter_Condition_SystemOnlyRepeated_Function {
	p := new(TagSearchFilter_Condition_SystemOnlyRepeated_Function)
	*p = x
	return p
}

func (x TagSearchFilter_Condition_SystemOnlyRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagSearchFilter_Condition_SystemOnlyRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[18].Descriptor()
}

func (TagSearchFilter_Condition_SystemOnlyRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[18]
}

func (x TagSearchFilter_Condition_SystemOnlyRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagSearchFilter_Condition_SystemOnlyRepeated_Function.Descriptor instead.
func (TagSearchFilter_Condition_SystemOnlyRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 3, 0}
}

type TagSearchFilter_Condition_AnyEntityTypeRepeated_Function int32

const (
	TagSearchFilter_Condition_AnyEntityTypeRepeated_UNSPECIFIED TagSearchFilter_Condition_AnyEntityTypeRepeated_Function = 0
	TagSearchFilter_Condition_AnyEntityTypeRepeated_IN          TagSearchFilter_Condition_AnyEntityTypeRepeated_Function = 2
)

// Enum value maps for TagSearchFilter_Condition_AnyEntityTypeRepeated_Function.
var (
	TagSearchFilter_Condition_AnyEntityTypeRepeated_Function_name = map[int32]string{
		0: "UNSPECIFIED",
		2: "IN",
	}
	TagSearchFilter_Condition_AnyEntityTypeRepeated_Function_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IN":          2,
	}
)

func (x TagSearchFilter_Condition_AnyEntityTypeRepeated_Function) Enum() *TagSearchFilter_Condition_AnyEntityTypeRepeated_Function {
	p := new(TagSearchFilter_Condition_AnyEntityTypeRepeated_Function)
	*p = x
	return p
}

func (x TagSearchFilter_Condition_AnyEntityTypeRepeated_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagSearchFilter_Condition_AnyEntityTypeRepeated_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[19].Descriptor()
}

func (TagSearchFilter_Condition_AnyEntityTypeRepeated_Function) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[19]
}

func (x TagSearchFilter_Condition_AnyEntityTypeRepeated_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagSearchFilter_Condition_AnyEntityTypeRepeated_Function.Descriptor instead.
func (TagSearchFilter_Condition_AnyEntityTypeRepeated_Function) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 4, 0}
}

type TagSearchOrdering_Field int32

const (
	TagSearchOrdering_UNSPECIFIED TagSearchOrdering_Field = 0 // invalid
	TagSearchOrdering_ID          TagSearchOrdering_Field = 1
	TagSearchOrdering_SYSTEM_ONLY TagSearchOrdering_Field = 2
)

// Enum value maps for TagSearchOrdering_Field.
var (
	TagSearchOrdering_Field_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ID",
		2: "SYSTEM_ONLY",
	}
	TagSearchOrdering_Field_value = map[string]int32{
		"UNSPECIFIED": 0,
		"ID":          1,
		"SYSTEM_ONLY": 2,
	}
)

func (x TagSearchOrdering_Field) Enum() *TagSearchOrdering_Field {
	p := new(TagSearchOrdering_Field)
	*p = x
	return p
}

func (x TagSearchOrdering_Field) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagSearchOrdering_Field) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_search_search_proto_enumTypes[20].Descriptor()
}

func (TagSearchOrdering_Field) Type() protoreflect.EnumType {
	return &file_anipj_content_search_search_proto_enumTypes[20]
}

func (x TagSearchOrdering_Field) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagSearchOrdering_Field.Descriptor instead.
func (TagSearchOrdering_Field) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{7, 0}
}

type TitleSearchFilter struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Negative bool                   `protobuf:"varint,1,opt,name=negative,proto3" json:"negative,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TitleSearchFilter_Condition_
	//	*TitleSearchFilter_Group_
	//	*TitleSearchFilter_FulltextSearch
	Payload       isTitleSearchFilter_Payload `protobuf_oneof:"Payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter) Reset() {
	*x = TitleSearchFilter{}
	mi := &file_anipj_content_search_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter) ProtoMessage() {}

func (x *TitleSearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0}
}

func (x *TitleSearchFilter) GetNegative() bool {
	if x != nil {
		return x.Negative
	}
	return false
}

func (x *TitleSearchFilter) GetPayload() isTitleSearchFilter_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TitleSearchFilter) GetCondition() *TitleSearchFilter_Condition {
	if x != nil {
		if x, ok := x.Payload.(*TitleSearchFilter_Condition_); ok {
			return x.Condition
		}
	}
	return nil
}

func (x *TitleSearchFilter) GetGroup() *TitleSearchFilter_Group {
	if x != nil {
		if x, ok := x.Payload.(*TitleSearchFilter_Group_); ok {
			return x.Group
		}
	}
	return nil
}

func (x *TitleSearchFilter) GetFulltextSearch() *TitleSearchFilter_FulltextSearchConfig {
	if x != nil {
		if x, ok := x.Payload.(*TitleSearchFilter_FulltextSearch); ok {
			return x.FulltextSearch
		}
	}
	return nil
}

type isTitleSearchFilter_Payload interface {
	isTitleSearchFilter_Payload()
}

type TitleSearchFilter_Condition_ struct {
	Condition *TitleSearchFilter_Condition `protobuf:"bytes,10,opt,name=condition,proto3,oneof"`
}

type TitleSearchFilter_Group_ struct {
	Group *TitleSearchFilter_Group `protobuf:"bytes,11,opt,name=group,proto3,oneof"`
}

type TitleSearchFilter_FulltextSearch struct {
	FulltextSearch *TitleSearchFilter_FulltextSearchConfig `protobuf:"bytes,12,opt,name=fulltext_search,json=fulltextSearch,proto3,oneof"`
}

func (*TitleSearchFilter_Condition_) isTitleSearchFilter_Payload() {}

func (*TitleSearchFilter_Group_) isTitleSearchFilter_Payload() {}

func (*TitleSearchFilter_FulltextSearch) isTitleSearchFilter_Payload() {}

type TitleSearchOrdering struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Field         TitleSearchOrdering_Field `protobuf:"varint,1,opt,name=field,proto3,enum=anipj.content.v1dev.TitleSearchOrdering_Field" json:"field,omitempty"`
	Direction     search.Ordering_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=anipj.protobuf.search.Ordering_Direction" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchOrdering) Reset() {
	*x = TitleSearchOrdering{}
	mi := &file_anipj_content_search_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchOrdering) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchOrdering) ProtoMessage() {}

func (x *TitleSearchOrdering) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchOrdering.ProtoReflect.Descriptor instead.
func (*TitleSearchOrdering) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{1}
}

func (x *TitleSearchOrdering) GetField() TitleSearchOrdering_Field {
	if x != nil {
		return x.Field
	}
	return TitleSearchOrdering_UNSPECIFIED
}

func (x *TitleSearchOrdering) GetDirection() search.Ordering_Direction {
	if x != nil {
		return x.Direction
	}
	return search.Ordering_Direction(0)
}

type TitleSearchPaging struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Size  int32                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Types that are valid to be assigned to Strategy:
	//
	//	*TitleSearchPaging_Cursor_
	//	*TitleSearchPaging_Skip_
	Strategy      isTitleSearchPaging_Strategy `protobuf_oneof:"Strategy"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchPaging) Reset() {
	*x = TitleSearchPaging{}
	mi := &file_anipj_content_search_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchPaging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchPaging) ProtoMessage() {}

func (x *TitleSearchPaging) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchPaging.ProtoReflect.Descriptor instead.
func (*TitleSearchPaging) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{2}
}

func (x *TitleSearchPaging) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TitleSearchPaging) GetStrategy() isTitleSearchPaging_Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *TitleSearchPaging) GetCursor() *TitleSearchPaging_Cursor {
	if x != nil {
		if x, ok := x.Strategy.(*TitleSearchPaging_Cursor_); ok {
			return x.Cursor
		}
	}
	return nil
}

func (x *TitleSearchPaging) GetSkip() *TitleSearchPaging_Skip {
	if x != nil {
		if x, ok := x.Strategy.(*TitleSearchPaging_Skip_); ok {
			return x.Skip
		}
	}
	return nil
}

type isTitleSearchPaging_Strategy interface {
	isTitleSearchPaging_Strategy()
}

type TitleSearchPaging_Cursor_ struct {
	Cursor *TitleSearchPaging_Cursor `protobuf:"bytes,11,opt,name=cursor,proto3,oneof"`
}

type TitleSearchPaging_Skip_ struct {
	Skip *TitleSearchPaging_Skip `protobuf:"bytes,12,opt,name=skip,proto3,oneof"`
}

func (*TitleSearchPaging_Cursor_) isTitleSearchPaging_Strategy() {}

func (*TitleSearchPaging_Skip_) isTitleSearchPaging_Strategy() {}

type BaseSearchFilter struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Negative bool                   `protobuf:"varint,1,opt,name=negative,proto3" json:"negative,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*BaseSearchFilter_Condition_
	//	*BaseSearchFilter_Group_
	//	*BaseSearchFilter_FulltextSearch
	Payload       isBaseSearchFilter_Payload `protobuf_oneof:"Payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchFilter) Reset() {
	*x = BaseSearchFilter{}
	mi := &file_anipj_content_search_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchFilter) ProtoMessage() {}

func (x *BaseSearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchFilter.ProtoReflect.Descriptor instead.
func (*BaseSearchFilter) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3}
}

func (x *BaseSearchFilter) GetNegative() bool {
	if x != nil {
		return x.Negative
	}
	return false
}

func (x *BaseSearchFilter) GetPayload() isBaseSearchFilter_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *BaseSearchFilter) GetCondition() *BaseSearchFilter_Condition {
	if x != nil {
		if x, ok := x.Payload.(*BaseSearchFilter_Condition_); ok {
			return x.Condition
		}
	}
	return nil
}

func (x *BaseSearchFilter) GetGroup() *BaseSearchFilter_Group {
	if x != nil {
		if x, ok := x.Payload.(*BaseSearchFilter_Group_); ok {
			return x.Group
		}
	}
	return nil
}

func (x *BaseSearchFilter) GetFulltextSearch() *BaseSearchFilter_FulltextSearchConfig {
	if x != nil {
		if x, ok := x.Payload.(*BaseSearchFilter_FulltextSearch); ok {
			return x.FulltextSearch
		}
	}
	return nil
}

type isBaseSearchFilter_Payload interface {
	isBaseSearchFilter_Payload()
}

type BaseSearchFilter_Condition_ struct {
	Condition *BaseSearchFilter_Condition `protobuf:"bytes,10,opt,name=condition,proto3,oneof"`
}

type BaseSearchFilter_Group_ struct {
	Group *BaseSearchFilter_Group `protobuf:"bytes,11,opt,name=group,proto3,oneof"`
}

type BaseSearchFilter_FulltextSearch struct {
	FulltextSearch *BaseSearchFilter_FulltextSearchConfig `protobuf:"bytes,12,opt,name=fulltext_search,json=fulltextSearch,proto3,oneof"`
}

func (*BaseSearchFilter_Condition_) isBaseSearchFilter_Payload() {}

func (*BaseSearchFilter_Group_) isBaseSearchFilter_Payload() {}

func (*BaseSearchFilter_FulltextSearch) isBaseSearchFilter_Payload() {}

type BaseSearchOrdering struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Field         BaseSearchOrdering_Field  `protobuf:"varint,1,opt,name=field,proto3,enum=anipj.content.v1dev.BaseSearchOrdering_Field" json:"field,omitempty"`
	Direction     search.Ordering_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=anipj.protobuf.search.Ordering_Direction" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchOrdering) Reset() {
	*x = BaseSearchOrdering{}
	mi := &file_anipj_content_search_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchOrdering) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchOrdering) ProtoMessage() {}

func (x *BaseSearchOrdering) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchOrdering.ProtoReflect.Descriptor instead.
func (*BaseSearchOrdering) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{4}
}

func (x *BaseSearchOrdering) GetField() BaseSearchOrdering_Field {
	if x != nil {
		return x.Field
	}
	return BaseSearchOrdering_UNSPECIFIED
}

func (x *BaseSearchOrdering) GetDirection() search.Ordering_Direction {
	if x != nil {
		return x.Direction
	}
	return search.Ordering_Direction(0)
}

type BaseSearchPaging struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Size  int32                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Types that are valid to be assigned to Strategy:
	//
	//	*BaseSearchPaging_Cursor_
	//	*BaseSearchPaging_Skip_
	Strategy      isBaseSearchPaging_Strategy `protobuf_oneof:"Strategy"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchPaging) Reset() {
	*x = BaseSearchPaging{}
	mi := &file_anipj_content_search_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchPaging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchPaging) ProtoMessage() {}

func (x *BaseSearchPaging) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchPaging.ProtoReflect.Descriptor instead.
func (*BaseSearchPaging) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{5}
}

func (x *BaseSearchPaging) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BaseSearchPaging) GetStrategy() isBaseSearchPaging_Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *BaseSearchPaging) GetCursor() *BaseSearchPaging_Cursor {
	if x != nil {
		if x, ok := x.Strategy.(*BaseSearchPaging_Cursor_); ok {
			return x.Cursor
		}
	}
	return nil
}

func (x *BaseSearchPaging) GetSkip() *BaseSearchPaging_Skip {
	if x != nil {
		if x, ok := x.Strategy.(*BaseSearchPaging_Skip_); ok {
			return x.Skip
		}
	}
	return nil
}

type isBaseSearchPaging_Strategy interface {
	isBaseSearchPaging_Strategy()
}

type BaseSearchPaging_Cursor_ struct {
	Cursor *BaseSearchPaging_Cursor `protobuf:"bytes,11,opt,name=cursor,proto3,oneof"`
}

type BaseSearchPaging_Skip_ struct {
	Skip *BaseSearchPaging_Skip `protobuf:"bytes,12,opt,name=skip,proto3,oneof"`
}

func (*BaseSearchPaging_Cursor_) isBaseSearchPaging_Strategy() {}

func (*BaseSearchPaging_Skip_) isBaseSearchPaging_Strategy() {}

type TagSearchFilter struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Negative bool                   `protobuf:"varint,1,opt,name=negative,proto3" json:"negative,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TagSearchFilter_Condition_
	//	*TagSearchFilter_Group_
	//	*TagSearchFilter_FulltextSearch
	Payload       isTagSearchFilter_Payload `protobuf_oneof:"Payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchFilter) Reset() {
	*x = TagSearchFilter{}
	mi := &file_anipj_content_search_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchFilter) ProtoMessage() {}

func (x *TagSearchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchFilter.ProtoReflect.Descriptor instead.
func (*TagSearchFilter) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6}
}

func (x *TagSearchFilter) GetNegative() bool {
	if x != nil {
		return x.Negative
	}
	return false
}

func (x *TagSearchFilter) GetPayload() isTagSearchFilter_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TagSearchFilter) GetCondition() *TagSearchFilter_Condition {
	if x != nil {
		if x, ok := x.Payload.(*TagSearchFilter_Condition_); ok {
			return x.Condition
		}
	}
	return nil
}

func (x *TagSearchFilter) GetGroup() *TagSearchFilter_Group {
	if x != nil {
		if x, ok := x.Payload.(*TagSearchFilter_Group_); ok {
			return x.Group
		}
	}
	return nil
}

func (x *TagSearchFilter) GetFulltextSearch() *TagSearchFilter_FulltextSearchConfig {
	if x != nil {
		if x, ok := x.Payload.(*TagSearchFilter_FulltextSearch); ok {
			return x.FulltextSearch
		}
	}
	return nil
}

type isTagSearchFilter_Payload interface {
	isTagSearchFilter_Payload()
}

type TagSearchFilter_Condition_ struct {
	Condition *TagSearchFilter_Condition `protobuf:"bytes,10,opt,name=condition,proto3,oneof"`
}

type TagSearchFilter_Group_ struct {
	Group *TagSearchFilter_Group `protobuf:"bytes,11,opt,name=group,proto3,oneof"`
}

type TagSearchFilter_FulltextSearch struct {
	FulltextSearch *TagSearchFilter_FulltextSearchConfig `protobuf:"bytes,12,opt,name=fulltext_search,json=fulltextSearch,proto3,oneof"`
}

func (*TagSearchFilter_Condition_) isTagSearchFilter_Payload() {}

func (*TagSearchFilter_Group_) isTagSearchFilter_Payload() {}

func (*TagSearchFilter_FulltextSearch) isTagSearchFilter_Payload() {}

type TagSearchOrdering struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Field         TagSearchOrdering_Field   `protobuf:"varint,1,opt,name=field,proto3,enum=anipj.content.v1dev.TagSearchOrdering_Field" json:"field,omitempty"`
	Direction     search.Ordering_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=anipj.protobuf.search.Ordering_Direction" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchOrdering) Reset() {
	*x = TagSearchOrdering{}
	mi := &file_anipj_content_search_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchOrdering) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchOrdering) ProtoMessage() {}

func (x *TagSearchOrdering) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchOrdering.ProtoReflect.Descriptor instead.
func (*TagSearchOrdering) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{7}
}

func (x *TagSearchOrdering) GetField() TagSearchOrdering_Field {
	if x != nil {
		return x.Field
	}
	return TagSearchOrdering_UNSPECIFIED
}

func (x *TagSearchOrdering) GetDirection() search.Ordering_Direction {
	if x != nil {
		return x.Direction
	}
	return search.Ordering_Direction(0)
}

type TagSearchPaging struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Size  int32                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Types that are valid to be assigned to Strategy:
	//
	//	*TagSearchPaging_Cursor_
	//	*TagSearchPaging_Skip_
	Strategy      isTagSearchPaging_Strategy `protobuf_oneof:"Strategy"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchPaging) Reset() {
	*x = TagSearchPaging{}
	mi := &file_anipj_content_search_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchPaging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchPaging) ProtoMessage() {}

func (x *TagSearchPaging) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchPaging.ProtoReflect.Descriptor instead.
func (*TagSearchPaging) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{8}
}

func (x *TagSearchPaging) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TagSearchPaging) GetStrategy() isTagSearchPaging_Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *TagSearchPaging) GetCursor() *TagSearchPaging_Cursor {
	if x != nil {
		if x, ok := x.Strategy.(*TagSearchPaging_Cursor_); ok {
			return x.Cursor
		}
	}
	return nil
}

func (x *TagSearchPaging) GetSkip() *TagSearchPaging_Skip {
	if x != nil {
		if x, ok := x.Strategy.(*TagSearchPaging_Skip_); ok {
			return x.Skip
		}
	}
	return nil
}

type isTagSearchPaging_Strategy interface {
	isTagSearchPaging_Strategy()
}

type TagSearchPaging_Cursor_ struct {
	Cursor *TagSearchPaging_Cursor `protobuf:"bytes,11,opt,name=cursor,proto3,oneof"`
}

type TagSearchPaging_Skip_ struct {
	Skip *TagSearchPaging_Skip `protobuf:"bytes,12,opt,name=skip,proto3,oneof"`
}

func (*TagSearchPaging_Cursor_) isTagSearchPaging_Strategy() {}

func (*TagSearchPaging_Skip_) isTagSearchPaging_Strategy() {}

type TitleSearchFilter_Group struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Filters       []*TitleSearchFilter         `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Operator      search.Filter_Group_Operator `protobuf:"varint,2,opt,name=operator,proto3,enum=anipj.protobuf.search.Filter_Group_Operator" json:"operator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Group) Reset() {
	*x = TitleSearchFilter_Group{}
	mi := &file_anipj_content_search_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Group) ProtoMessage() {}

func (x *TitleSearchFilter_Group) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Group.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Group) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TitleSearchFilter_Group) GetFilters() []*TitleSearchFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *TitleSearchFilter_Group) GetOperator() search.Filter_Group_Operator {
	if x != nil {
		return x.Operator
	}
	return search.Filter_Group_Operator(0)
}

type TitleSearchFilter_Condition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Field:
	//
	//	*TitleSearchFilter_Condition_Id_
	//	*TitleSearchFilter_Condition_IdRepeated_
	//	*TitleSearchFilter_Condition_FranchiseId_
	//	*TitleSearchFilter_Condition_FranchiseIdRepeated_
	//	*TitleSearchFilter_Condition_ProductionStatusRepeated_
	//	*TitleSearchFilter_Condition_AnimeKindRepeated_
	//	*TitleSearchFilter_Condition_ReleasedAt_
	//	*TitleSearchFilter_Condition_AnyTag_
	//	*TitleSearchFilter_Condition_AnyTagRepeated_
	Field         isTitleSearchFilter_Condition_Field `protobuf_oneof:"Field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition) Reset() {
	*x = TitleSearchFilter_Condition{}
	mi := &file_anipj_content_search_search_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition) ProtoMessage() {}

func (x *TitleSearchFilter_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TitleSearchFilter_Condition) GetField() isTitleSearchFilter_Condition_Field {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *TitleSearchFilter_Condition) GetId() *TitleSearchFilter_Condition_Id {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchFilter_Condition_Id_); ok {
			return x.Id
		}
	}
	return nil
}

func (x *TitleSearchFilter_Condition) GetIdRepeated() *TitleSearchFilter_Condition_IdRepeated {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchFilter_Condition_IdRepeated_); ok {
			return x.IdRepeated
		}
	}
	return nil
}

func (x *TitleSearchFilter_Condition) GetFranchiseId() *TitleSearchFilter_Condition_FranchiseId {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchFilter_Condition_FranchiseId_); ok {
			return x.FranchiseId
		}
	}
	return nil
}

func (x *TitleSearchFilter_Condition) GetFranchiseIdRepeated() *TitleSearchFilter_Condition_FranchiseIdRepeated {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchFilter_Condition_FranchiseIdRepeated_); ok {
			return x.FranchiseIdRepeated
		}
	}
	return nil
}

func (x *TitleSearchFilter_Condition) GetProductionStatusRepeated() *TitleSearchFilter_Condition_ProductionStatusRepeated {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchFilter_Condition_ProductionStatusRepeated_); ok {
			return x.ProductionStatusRepeated
		}
	}
	return nil
}

func (x *TitleSearchFilter_Condition) GetAnimeKindRepeated() *TitleSearchFilter_Condition_AnimeKindRepeated {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchFilter_Condition_AnimeKindRepeated_); ok {
			return x.AnimeKindRepeated
		}
	}
	return nil
}

func (x *TitleSearchFilter_Condition) GetReleasedAt() *TitleSearchFilter_Condition_ReleasedAt {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchFilter_Condition_ReleasedAt_); ok {
			return x.ReleasedAt
		}
	}
	return nil
}

func (x *TitleSearchFilter_Condition) GetAnyTag() *TitleSearchFilter_Condition_AnyTag {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchFilter_Condition_AnyTag_); ok {
			return x.AnyTag
		}
	}
	return nil
}

func (x *TitleSearchFilter_Condition) GetAnyTagRepeated() *TitleSearchFilter_Condition_AnyTagRepeated {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchFilter_Condition_AnyTagRepeated_); ok {
			return x.AnyTagRepeated
		}
	}
	return nil
}

type isTitleSearchFilter_Condition_Field interface {
	isTitleSearchFilter_Condition_Field()
}

type TitleSearchFilter_Condition_Id_ struct {
	Id *TitleSearchFilter_Condition_Id `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type TitleSearchFilter_Condition_IdRepeated_ struct {
	IdRepeated *TitleSearchFilter_Condition_IdRepeated `protobuf:"bytes,1001,opt,name=id_repeated,json=idRepeated,proto3,oneof"`
}

type TitleSearchFilter_Condition_FranchiseId_ struct {
	FranchiseId *TitleSearchFilter_Condition_FranchiseId `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3,oneof"`
}

type TitleSearchFilter_Condition_FranchiseIdRepeated_ struct {
	FranchiseIdRepeated *TitleSearchFilter_Condition_FranchiseIdRepeated `protobuf:"bytes,1002,opt,name=franchise_id_repeated,json=franchiseIdRepeated,proto3,oneof"`
}

type TitleSearchFilter_Condition_ProductionStatusRepeated_ struct {
	ProductionStatusRepeated *TitleSearchFilter_Condition_ProductionStatusRepeated `protobuf:"bytes,1003,opt,name=production_status_repeated,json=productionStatusRepeated,proto3,oneof"`
}

type TitleSearchFilter_Condition_AnimeKindRepeated_ struct {
	AnimeKindRepeated *TitleSearchFilter_Condition_AnimeKindRepeated `protobuf:"bytes,1004,opt,name=anime_kind_repeated,json=animeKindRepeated,proto3,oneof"`
}

type TitleSearchFilter_Condition_ReleasedAt_ struct {
	ReleasedAt *TitleSearchFilter_Condition_ReleasedAt `protobuf:"bytes,5,opt,name=released_at,json=releasedAt,proto3,oneof"`
}

type TitleSearchFilter_Condition_AnyTag_ struct {
	AnyTag *TitleSearchFilter_Condition_AnyTag `protobuf:"bytes,6,opt,name=any_tag,json=anyTag,proto3,oneof"`
}

type TitleSearchFilter_Condition_AnyTagRepeated_ struct {
	AnyTagRepeated *TitleSearchFilter_Condition_AnyTagRepeated `protobuf:"bytes,1006,opt,name=any_tag_repeated,json=anyTagRepeated,proto3,oneof"`
}

func (*TitleSearchFilter_Condition_Id_) isTitleSearchFilter_Condition_Field() {}

func (*TitleSearchFilter_Condition_IdRepeated_) isTitleSearchFilter_Condition_Field() {}

func (*TitleSearchFilter_Condition_FranchiseId_) isTitleSearchFilter_Condition_Field() {}

func (*TitleSearchFilter_Condition_FranchiseIdRepeated_) isTitleSearchFilter_Condition_Field() {}

func (*TitleSearchFilter_Condition_ProductionStatusRepeated_) isTitleSearchFilter_Condition_Field() {}

func (*TitleSearchFilter_Condition_AnimeKindRepeated_) isTitleSearchFilter_Condition_Field() {}

func (*TitleSearchFilter_Condition_ReleasedAt_) isTitleSearchFilter_Condition_Field() {}

func (*TitleSearchFilter_Condition_AnyTag_) isTitleSearchFilter_Condition_Field() {}

func (*TitleSearchFilter_Condition_AnyTagRepeated_) isTitleSearchFilter_Condition_Field() {}

type TitleSearchFilter_FulltextSearchConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Config        SearchLanguage         `protobuf:"varint,2,opt,name=config,proto3,enum=anipj.content.v1dev.SearchLanguage" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_FulltextSearchConfig) Reset() {
	*x = TitleSearchFilter_FulltextSearchConfig{}
	mi := &file_anipj_content_search_search_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_FulltextSearchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_FulltextSearchConfig) ProtoMessage() {}

func (x *TitleSearchFilter_FulltextSearchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_FulltextSearchConfig.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_FulltextSearchConfig) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 2}
}

func (x *TitleSearchFilter_FulltextSearchConfig) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *TitleSearchFilter_FulltextSearchConfig) GetConfig() SearchLanguage {
	if x != nil {
		return x.Config
	}
	return SearchLanguage_SEARCH_LANGUAGE_UNSPECIFIED
}

type TitleSearchFilter_Condition_Id struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Value         int32                                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Function      TitleSearchFilter_Condition_Id_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TitleSearchFilter_Condition_Id_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition_Id) Reset() {
	*x = TitleSearchFilter_Condition_Id{}
	mi := &file_anipj_content_search_search_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition_Id) ProtoMessage() {}

func (x *TitleSearchFilter_Condition_Id) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition_Id.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition_Id) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *TitleSearchFilter_Condition_Id) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TitleSearchFilter_Condition_Id) GetFunction() TitleSearchFilter_Condition_Id_Function {
	if x != nil {
		return x.Function
	}
	return TitleSearchFilter_Condition_Id_UNSPECIFIED
}

type TitleSearchFilter_Condition_IdRepeated struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Value         []int32                                         `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	Function      TitleSearchFilter_Condition_IdRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TitleSearchFilter_Condition_IdRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition_IdRepeated) Reset() {
	*x = TitleSearchFilter_Condition_IdRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition_IdRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition_IdRepeated) ProtoMessage() {}

func (x *TitleSearchFilter_Condition_IdRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition_IdRepeated.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition_IdRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *TitleSearchFilter_Condition_IdRepeated) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TitleSearchFilter_Condition_IdRepeated) GetFunction() TitleSearchFilter_Condition_IdRepeated_Function {
	if x != nil {
		return x.Function
	}
	return TitleSearchFilter_Condition_IdRepeated_UNSPECIFIED
}

type TitleSearchFilter_Condition_FranchiseId struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Value         int32                                            `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Function      TitleSearchFilter_Condition_FranchiseId_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TitleSearchFilter_Condition_FranchiseId_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition_FranchiseId) Reset() {
	*x = TitleSearchFilter_Condition_FranchiseId{}
	mi := &file_anipj_content_search_search_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition_FranchiseId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition_FranchiseId) ProtoMessage() {}

func (x *TitleSearchFilter_Condition_FranchiseId) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition_FranchiseId.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition_FranchiseId) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 2}
}

func (x *TitleSearchFilter_Condition_FranchiseId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TitleSearchFilter_Condition_FranchiseId) GetFunction() TitleSearchFilter_Condition_FranchiseId_Function {
	if x != nil {
		return x.Function
	}
	return TitleSearchFilter_Condition_FranchiseId_UNSPECIFIED
}

type TitleSearchFilter_Condition_FranchiseIdRepeated struct {
	state         protoimpl.MessageState                                   `protogen:"open.v1"`
	Value         []int32                                                  `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	Function      TitleSearchFilter_Condition_FranchiseIdRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TitleSearchFilter_Condition_FranchiseIdRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition_FranchiseIdRepeated) Reset() {
	*x = TitleSearchFilter_Condition_FranchiseIdRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition_FranchiseIdRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition_FranchiseIdRepeated) ProtoMessage() {}

func (x *TitleSearchFilter_Condition_FranchiseIdRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition_FranchiseIdRepeated.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition_FranchiseIdRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 3}
}

func (x *TitleSearchFilter_Condition_FranchiseIdRepeated) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TitleSearchFilter_Condition_FranchiseIdRepeated) GetFunction() TitleSearchFilter_Condition_FranchiseIdRepeated_Function {
	if x != nil {
		return x.Function
	}
	return TitleSearchFilter_Condition_FranchiseIdRepeated_UNSPECIFIED
}

type TitleSearchFilter_Condition_ProductionStatusRepeated struct {
	state         protoimpl.MessageState                                        `protogen:"open.v1"`
	Value         []ProductionStatus                                            `protobuf:"varint,1,rep,packed,name=value,proto3,enum=anipj.content.v1dev.ProductionStatus" json:"value,omitempty"`
	Function      TitleSearchFilter_Condition_ProductionStatusRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TitleSearchFilter_Condition_ProductionStatusRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition_ProductionStatusRepeated) Reset() {
	*x = TitleSearchFilter_Condition_ProductionStatusRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition_ProductionStatusRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition_ProductionStatusRepeated) ProtoMessage() {}

func (x *TitleSearchFilter_Condition_ProductionStatusRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition_ProductionStatusRepeated.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition_ProductionStatusRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 4}
}

func (x *TitleSearchFilter_Condition_ProductionStatusRepeated) GetValue() []ProductionStatus {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TitleSearchFilter_Condition_ProductionStatusRepeated) GetFunction() TitleSearchFilter_Condition_ProductionStatusRepeated_Function {
	if x != nil {
		return x.Function
	}
	return TitleSearchFilter_Condition_ProductionStatusRepeated_UNSPECIFIED
}

type TitleSearchFilter_Condition_AnimeKindRepeated struct {
	state         protoimpl.MessageState                                 `protogen:"open.v1"`
	Value         []AnimeKind                                            `protobuf:"varint,1,rep,packed,name=value,proto3,enum=anipj.content.v1dev.AnimeKind" json:"value,omitempty"`
	Function      TitleSearchFilter_Condition_AnimeKindRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TitleSearchFilter_Condition_AnimeKindRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition_AnimeKindRepeated) Reset() {
	*x = TitleSearchFilter_Condition_AnimeKindRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition_AnimeKindRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition_AnimeKindRepeated) ProtoMessage() {}

func (x *TitleSearchFilter_Condition_AnimeKindRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition_AnimeKindRepeated.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition_AnimeKindRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 5}
}

func (x *TitleSearchFilter_Condition_AnimeKindRepeated) GetValue() []AnimeKind {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TitleSearchFilter_Condition_AnimeKindRepeated) GetFunction() TitleSearchFilter_Condition_AnimeKindRepeated_Function {
	if x != nil {
		return x.Function
	}
	return TitleSearchFilter_Condition_AnimeKindRepeated_UNSPECIFIED
}

type TitleSearchFilter_Condition_ReleasedAt struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Value         *timestamppb.Timestamp                          `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Function      TitleSearchFilter_Condition_ReleasedAt_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TitleSearchFilter_Condition_ReleasedAt_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition_ReleasedAt) Reset() {
	*x = TitleSearchFilter_Condition_ReleasedAt{}
	mi := &file_anipj_content_search_search_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition_ReleasedAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition_ReleasedAt) ProtoMessage() {}

func (x *TitleSearchFilter_Condition_ReleasedAt) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition_ReleasedAt.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition_ReleasedAt) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 6}
}

func (x *TitleSearchFilter_Condition_ReleasedAt) GetValue() *timestamppb.Timestamp {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TitleSearchFilter_Condition_ReleasedAt) GetFunction() TitleSearchFilter_Condition_ReleasedAt_Function {
	if x != nil {
		return x.Function
	}
	return TitleSearchFilter_Condition_ReleasedAt_UNSPECIFIED
}

type TitleSearchFilter_Condition_AnyTag struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Value         string                                      `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Function      TitleSearchFilter_Condition_AnyTag_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TitleSearchFilter_Condition_AnyTag_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition_AnyTag) Reset() {
	*x = TitleSearchFilter_Condition_AnyTag{}
	mi := &file_anipj_content_search_search_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition_AnyTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition_AnyTag) ProtoMessage() {}

func (x *TitleSearchFilter_Condition_AnyTag) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition_AnyTag.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition_AnyTag) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 7}
}

func (x *TitleSearchFilter_Condition_AnyTag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TitleSearchFilter_Condition_AnyTag) GetFunction() TitleSearchFilter_Condition_AnyTag_Function {
	if x != nil {
		return x.Function
	}
	return TitleSearchFilter_Condition_AnyTag_UNSPECIFIED
}

type TitleSearchFilter_Condition_AnyTagRepeated struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	Value         []string                                            `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	Function      TitleSearchFilter_Condition_AnyTagRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TitleSearchFilter_Condition_AnyTagRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchFilter_Condition_AnyTagRepeated) Reset() {
	*x = TitleSearchFilter_Condition_AnyTagRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchFilter_Condition_AnyTagRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchFilter_Condition_AnyTagRepeated) ProtoMessage() {}

func (x *TitleSearchFilter_Condition_AnyTagRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchFilter_Condition_AnyTagRepeated.ProtoReflect.Descriptor instead.
func (*TitleSearchFilter_Condition_AnyTagRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{0, 1, 8}
}

func (x *TitleSearchFilter_Condition_AnyTagRepeated) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TitleSearchFilter_Condition_AnyTagRepeated) GetFunction() TitleSearchFilter_Condition_AnyTagRepeated_Function {
	if x != nil {
		return x.Function
	}
	return TitleSearchFilter_Condition_AnyTagRepeated_UNSPECIFIED
}

type TitleSearchPaging_Cursor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TitleSearchPaging_Cursor_FromStart_
	//	*TitleSearchPaging_Cursor_AfterRecord_
	Payload       isTitleSearchPaging_Cursor_Payload `protobuf_oneof:"Payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchPaging_Cursor) Reset() {
	*x = TitleSearchPaging_Cursor{}
	mi := &file_anipj_content_search_search_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchPaging_Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchPaging_Cursor) ProtoMessage() {}

func (x *TitleSearchPaging_Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchPaging_Cursor.ProtoReflect.Descriptor instead.
func (*TitleSearchPaging_Cursor) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TitleSearchPaging_Cursor) GetPayload() isTitleSearchPaging_Cursor_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TitleSearchPaging_Cursor) GetFromStart() *TitleSearchPaging_Cursor_FromStart {
	if x != nil {
		if x, ok := x.Payload.(*TitleSearchPaging_Cursor_FromStart_); ok {
			return x.FromStart
		}
	}
	return nil
}

func (x *TitleSearchPaging_Cursor) GetAfterRecord() *TitleSearchPaging_Cursor_AfterRecord {
	if x != nil {
		if x, ok := x.Payload.(*TitleSearchPaging_Cursor_AfterRecord_); ok {
			return x.AfterRecord
		}
	}
	return nil
}

type isTitleSearchPaging_Cursor_Payload interface {
	isTitleSearchPaging_Cursor_Payload()
}

type TitleSearchPaging_Cursor_FromStart_ struct {
	FromStart *TitleSearchPaging_Cursor_FromStart `protobuf:"bytes,1,opt,name=from_start,json=fromStart,proto3,oneof"`
}

type TitleSearchPaging_Cursor_AfterRecord_ struct {
	AfterRecord *TitleSearchPaging_Cursor_AfterRecord `protobuf:"bytes,2,opt,name=after_record,json=afterRecord,proto3,oneof"`
}

func (*TitleSearchPaging_Cursor_FromStart_) isTitleSearchPaging_Cursor_Payload() {}

func (*TitleSearchPaging_Cursor_AfterRecord_) isTitleSearchPaging_Cursor_Payload() {}

type TitleSearchPaging_Skip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	OrderFactors  []*TitleSearchOrdering `protobuf:"bytes,2,rep,name=order_factors,json=orderFactors,proto3" json:"order_factors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchPaging_Skip) Reset() {
	*x = TitleSearchPaging_Skip{}
	mi := &file_anipj_content_search_search_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchPaging_Skip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchPaging_Skip) ProtoMessage() {}

func (x *TitleSearchPaging_Skip) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchPaging_Skip.ProtoReflect.Descriptor instead.
func (*TitleSearchPaging_Skip) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{2, 1}
}

func (x *TitleSearchPaging_Skip) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TitleSearchPaging_Skip) GetOrderFactors() []*TitleSearchOrdering {
	if x != nil {
		return x.OrderFactors
	}
	return nil
}

type TitleSearchPaging_Cursor_FromStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderFactors  []*TitleSearchOrdering `protobuf:"bytes,2,rep,name=order_factors,json=orderFactors,proto3" json:"order_factors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchPaging_Cursor_FromStart) Reset() {
	*x = TitleSearchPaging_Cursor_FromStart{}
	mi := &file_anipj_content_search_search_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchPaging_Cursor_FromStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchPaging_Cursor_FromStart) ProtoMessage() {}

func (x *TitleSearchPaging_Cursor_FromStart) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchPaging_Cursor_FromStart.ProtoReflect.Descriptor instead.
func (*TitleSearchPaging_Cursor_FromStart) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *TitleSearchPaging_Cursor_FromStart) GetOrderFactors() []*TitleSearchOrdering {
	if x != nil {
		return x.OrderFactors
	}
	return nil
}

// значение продолжения выборки, при условиях сохранения фактора сортировки
type TitleSearchPaging_Cursor_AfterRecord struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Components    []*TitleSearchPaging_Cursor_Component `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchPaging_Cursor_AfterRecord) Reset() {
	*x = TitleSearchPaging_Cursor_AfterRecord{}
	mi := &file_anipj_content_search_search_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchPaging_Cursor_AfterRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchPaging_Cursor_AfterRecord) ProtoMessage() {}

func (x *TitleSearchPaging_Cursor_AfterRecord) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchPaging_Cursor_AfterRecord.ProtoReflect.Descriptor instead.
func (*TitleSearchPaging_Cursor_AfterRecord) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{2, 0, 1}
}

func (x *TitleSearchPaging_Cursor_AfterRecord) GetComponents() []*TitleSearchPaging_Cursor_Component {
	if x != nil {
		return x.Components
	}
	return nil
}

type TitleSearchPaging_Cursor_Component struct {
	state     protoimpl.MessageState    `protogen:"open.v1"`
	Direction search.Ordering_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=anipj.protobuf.search.Ordering_Direction" json:"direction,omitempty"`
	// Types that are valid to be assigned to Field:
	//
	//	*TitleSearchPaging_Cursor_Component_Id
	//	*TitleSearchPaging_Cursor_Component_FranchiseId
	//	*TitleSearchPaging_Cursor_Component_ProductionStatus
	//	*TitleSearchPaging_Cursor_Component_AnimeKind
	//	*TitleSearchPaging_Cursor_Component_ReleasedAt
	Field         isTitleSearchPaging_Cursor_Component_Field `protobuf_oneof:"Field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleSearchPaging_Cursor_Component) Reset() {
	*x = TitleSearchPaging_Cursor_Component{}
	mi := &file_anipj_content_search_search_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleSearchPaging_Cursor_Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleSearchPaging_Cursor_Component) ProtoMessage() {}

func (x *TitleSearchPaging_Cursor_Component) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleSearchPaging_Cursor_Component.ProtoReflect.Descriptor instead.
func (*TitleSearchPaging_Cursor_Component) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{2, 0, 2}
}

func (x *TitleSearchPaging_Cursor_Component) GetDirection() search.Ordering_Direction {
	if x != nil {
		return x.Direction
	}
	return search.Ordering_Direction(0)
}

func (x *TitleSearchPaging_Cursor_Component) GetField() isTitleSearchPaging_Cursor_Component_Field {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *TitleSearchPaging_Cursor_Component) GetId() int32 {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchPaging_Cursor_Component_Id); ok {
			return x.Id
		}
	}
	return 0
}

func (x *TitleSearchPaging_Cursor_Component) GetFranchiseId() int32 {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchPaging_Cursor_Component_FranchiseId); ok {
			return x.FranchiseId
		}
	}
	return 0
}

func (x *TitleSearchPaging_Cursor_Component) GetProductionStatus() ProductionStatus {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchPaging_Cursor_Component_ProductionStatus); ok {
			return x.ProductionStatus
		}
	}
	return ProductionStatus_PRODUCTION_STATUS_UNSPECIFIED
}

func (x *TitleSearchPaging_Cursor_Component) GetAnimeKind() AnimeKind {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchPaging_Cursor_Component_AnimeKind); ok {
			return x.AnimeKind
		}
	}
	return AnimeKind_ANIME_KIND_UNSPECIFIED
}

func (x *TitleSearchPaging_Cursor_Component) GetReleasedAt() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Field.(*TitleSearchPaging_Cursor_Component_ReleasedAt); ok {
			return x.ReleasedAt
		}
	}
	return nil
}

type isTitleSearchPaging_Cursor_Component_Field interface {
	isTitleSearchPaging_Cursor_Component_Field()
}

type TitleSearchPaging_Cursor_Component_Id struct {
	Id int32 `protobuf:"varint,11,opt,name=id,proto3,oneof"`
}

type TitleSearchPaging_Cursor_Component_FranchiseId struct {
	FranchiseId int32 `protobuf:"varint,12,opt,name=franchise_id,json=franchiseId,proto3,oneof"`
}

type TitleSearchPaging_Cursor_Component_ProductionStatus struct {
	ProductionStatus ProductionStatus `protobuf:"varint,13,opt,name=production_status,json=productionStatus,proto3,enum=anipj.content.v1dev.ProductionStatus,oneof"`
}

type TitleSearchPaging_Cursor_Component_AnimeKind struct {
	AnimeKind AnimeKind `protobuf:"varint,14,opt,name=anime_kind,json=animeKind,proto3,enum=anipj.content.v1dev.AnimeKind,oneof"`
}

type TitleSearchPaging_Cursor_Component_ReleasedAt struct {
	ReleasedAt *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=released_at,json=releasedAt,proto3,oneof"`
}

func (*TitleSearchPaging_Cursor_Component_Id) isTitleSearchPaging_Cursor_Component_Field() {}

func (*TitleSearchPaging_Cursor_Component_FranchiseId) isTitleSearchPaging_Cursor_Component_Field() {}

func (*TitleSearchPaging_Cursor_Component_ProductionStatus) isTitleSearchPaging_Cursor_Component_Field() {
}

func (*TitleSearchPaging_Cursor_Component_AnimeKind) isTitleSearchPaging_Cursor_Component_Field() {}

func (*TitleSearchPaging_Cursor_Component_ReleasedAt) isTitleSearchPaging_Cursor_Component_Field() {}

type BaseSearchFilter_Group struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Filters       []*BaseSearchFilter          `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Operator      search.Filter_Group_Operator `protobuf:"varint,2,opt,name=operator,proto3,enum=anipj.protobuf.search.Filter_Group_Operator" json:"operator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchFilter_Group) Reset() {
	*x = BaseSearchFilter_Group{}
	mi := &file_anipj_content_search_search_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchFilter_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchFilter_Group) ProtoMessage() {}

func (x *BaseSearchFilter_Group) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchFilter_Group.ProtoReflect.Descriptor instead.
func (*BaseSearchFilter_Group) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 0}
}

func (x *BaseSearchFilter_Group) GetFilters() []*BaseSearchFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *BaseSearchFilter_Group) GetOperator() search.Filter_Group_Operator {
	if x != nil {
		return x.Operator
	}
	return search.Filter_Group_Operator(0)
}

type BaseSearchFilter_Condition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Field:
	//
	//	*BaseSearchFilter_Condition_Id_
	//	*BaseSearchFilter_Condition_IdRepeated_
	//	*BaseSearchFilter_Condition_AnyTag_
	//	*BaseSearchFilter_Condition_AnyTagRepeated_
	Field         isBaseSearchFilter_Condition_Field `protobuf_oneof:"Field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchFilter_Condition) Reset() {
	*x = BaseSearchFilter_Condition{}
	mi := &file_anipj_content_search_search_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchFilter_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchFilter_Condition) ProtoMessage() {}

func (x *BaseSearchFilter_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchFilter_Condition.ProtoReflect.Descriptor instead.
func (*BaseSearchFilter_Condition) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 1}
}

func (x *BaseSearchFilter_Condition) GetField() isBaseSearchFilter_Condition_Field {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *BaseSearchFilter_Condition) GetId() *BaseSearchFilter_Condition_Id {
	if x != nil {
		if x, ok := x.Field.(*BaseSearchFilter_Condition_Id_); ok {
			return x.Id
		}
	}
	return nil
}

func (x *BaseSearchFilter_Condition) GetIdRepeated() *BaseSearchFilter_Condition_IdRepeated {
	if x != nil {
		if x, ok := x.Field.(*BaseSearchFilter_Condition_IdRepeated_); ok {
			return x.IdRepeated
		}
	}
	return nil
}

func (x *BaseSearchFilter_Condition) GetAnyTag() *BaseSearchFilter_Condition_AnyTag {
	if x != nil {
		if x, ok := x.Field.(*BaseSearchFilter_Condition_AnyTag_); ok {
			return x.AnyTag
		}
	}
	return nil
}

func (x *BaseSearchFilter_Condition) GetAnyTagRepeated() *BaseSearchFilter_Condition_AnyTagRepeated {
	if x != nil {
		if x, ok := x.Field.(*BaseSearchFilter_Condition_AnyTagRepeated_); ok {
			return x.AnyTagRepeated
		}
	}
	return nil
}

type isBaseSearchFilter_Condition_Field interface {
	isBaseSearchFilter_Condition_Field()
}

type BaseSearchFilter_Condition_Id_ struct {
	Id *BaseSearchFilter_Condition_Id `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type BaseSearchFilter_Condition_IdRepeated_ struct {
	IdRepeated *BaseSearchFilter_Condition_IdRepeated `protobuf:"bytes,1001,opt,name=id_repeated,json=idRepeated,proto3,oneof"`
}

type BaseSearchFilter_Condition_AnyTag_ struct {
	AnyTag *BaseSearchFilter_Condition_AnyTag `protobuf:"bytes,2,opt,name=any_tag,json=anyTag,proto3,oneof"`
}

type BaseSearchFilter_Condition_AnyTagRepeated_ struct {
	AnyTagRepeated *BaseSearchFilter_Condition_AnyTagRepeated `protobuf:"bytes,1002,opt,name=any_tag_repeated,json=anyTagRepeated,proto3,oneof"`
}

func (*BaseSearchFilter_Condition_Id_) isBaseSearchFilter_Condition_Field() {}

func (*BaseSearchFilter_Condition_IdRepeated_) isBaseSearchFilter_Condition_Field() {}

func (*BaseSearchFilter_Condition_AnyTag_) isBaseSearchFilter_Condition_Field() {}

func (*BaseSearchFilter_Condition_AnyTagRepeated_) isBaseSearchFilter_Condition_Field() {}

type BaseSearchFilter_FulltextSearchConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Config        SearchLanguage         `protobuf:"varint,2,opt,name=config,proto3,enum=anipj.content.v1dev.SearchLanguage" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchFilter_FulltextSearchConfig) Reset() {
	*x = BaseSearchFilter_FulltextSearchConfig{}
	mi := &file_anipj_content_search_search_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchFilter_FulltextSearchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchFilter_FulltextSearchConfig) ProtoMessage() {}

func (x *BaseSearchFilter_FulltextSearchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchFilter_FulltextSearchConfig.ProtoReflect.Descriptor instead.
func (*BaseSearchFilter_FulltextSearchConfig) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 2}
}

func (x *BaseSearchFilter_FulltextSearchConfig) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *BaseSearchFilter_FulltextSearchConfig) GetConfig() SearchLanguage {
	if x != nil {
		return x.Config
	}
	return SearchLanguage_SEARCH_LANGUAGE_UNSPECIFIED
}

type BaseSearchFilter_Condition_Id struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Value         int32                                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Function      BaseSearchFilter_Condition_Id_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.BaseSearchFilter_Condition_Id_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchFilter_Condition_Id) Reset() {
	*x = BaseSearchFilter_Condition_Id{}
	mi := &file_anipj_content_search_search_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchFilter_Condition_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchFilter_Condition_Id) ProtoMessage() {}

func (x *BaseSearchFilter_Condition_Id) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchFilter_Condition_Id.ProtoReflect.Descriptor instead.
func (*BaseSearchFilter_Condition_Id) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 1, 0}
}

func (x *BaseSearchFilter_Condition_Id) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *BaseSearchFilter_Condition_Id) GetFunction() BaseSearchFilter_Condition_Id_Function {
	if x != nil {
		return x.Function
	}
	return BaseSearchFilter_Condition_Id_UNSPECIFIED
}

type BaseSearchFilter_Condition_IdRepeated struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Value         []int32                                        `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	Function      BaseSearchFilter_Condition_IdRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.BaseSearchFilter_Condition_IdRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchFilter_Condition_IdRepeated) Reset() {
	*x = BaseSearchFilter_Condition_IdRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchFilter_Condition_IdRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchFilter_Condition_IdRepeated) ProtoMessage() {}

func (x *BaseSearchFilter_Condition_IdRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchFilter_Condition_IdRepeated.ProtoReflect.Descriptor instead.
func (*BaseSearchFilter_Condition_IdRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 1, 1}
}

func (x *BaseSearchFilter_Condition_IdRepeated) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BaseSearchFilter_Condition_IdRepeated) GetFunction() BaseSearchFilter_Condition_IdRepeated_Function {
	if x != nil {
		return x.Function
	}
	return BaseSearchFilter_Condition_IdRepeated_UNSPECIFIED
}

type BaseSearchFilter_Condition_AnyTag struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Value         string                                     `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Function      BaseSearchFilter_Condition_AnyTag_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.BaseSearchFilter_Condition_AnyTag_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchFilter_Condition_AnyTag) Reset() {
	*x = BaseSearchFilter_Condition_AnyTag{}
	mi := &file_anipj_content_search_search_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchFilter_Condition_AnyTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchFilter_Condition_AnyTag) ProtoMessage() {}

func (x *BaseSearchFilter_Condition_AnyTag) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchFilter_Condition_AnyTag.ProtoReflect.Descriptor instead.
func (*BaseSearchFilter_Condition_AnyTag) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 1, 2}
}

func (x *BaseSearchFilter_Condition_AnyTag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *BaseSearchFilter_Condition_AnyTag) GetFunction() BaseSearchFilter_Condition_AnyTag_Function {
	if x != nil {
		return x.Function
	}
	return BaseSearchFilter_Condition_AnyTag_UNSPECIFIED
}

type BaseSearchFilter_Condition_AnyTagRepeated struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Value         []string                                           `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	Function      BaseSearchFilter_Condition_AnyTagRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.BaseSearchFilter_Condition_AnyTagRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchFilter_Condition_AnyTagRepeated) Reset() {
	*x = BaseSearchFilter_Condition_AnyTagRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchFilter_Condition_AnyTagRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchFilter_Condition_AnyTagRepeated) ProtoMessage() {}

func (x *BaseSearchFilter_Condition_AnyTagRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchFilter_Condition_AnyTagRepeated.ProtoReflect.Descriptor instead.
func (*BaseSearchFilter_Condition_AnyTagRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{3, 1, 3}
}

func (x *BaseSearchFilter_Condition_AnyTagRepeated) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BaseSearchFilter_Condition_AnyTagRepeated) GetFunction() BaseSearchFilter_Condition_AnyTagRepeated_Function {
	if x != nil {
		return x.Function
	}
	return BaseSearchFilter_Condition_AnyTagRepeated_UNSPECIFIED
}

type BaseSearchPaging_Cursor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*BaseSearchPaging_Cursor_FromStart_
	//	*BaseSearchPaging_Cursor_AfterRecord_
	Payload       isBaseSearchPaging_Cursor_Payload `protobuf_oneof:"Payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchPaging_Cursor) Reset() {
	*x = BaseSearchPaging_Cursor{}
	mi := &file_anipj_content_search_search_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchPaging_Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchPaging_Cursor) ProtoMessage() {}

func (x *BaseSearchPaging_Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchPaging_Cursor.ProtoReflect.Descriptor instead.
func (*BaseSearchPaging_Cursor) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{5, 0}
}

func (x *BaseSearchPaging_Cursor) GetPayload() isBaseSearchPaging_Cursor_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *BaseSearchPaging_Cursor) GetFromStart() *BaseSearchPaging_Cursor_FromStart {
	if x != nil {
		if x, ok := x.Payload.(*BaseSearchPaging_Cursor_FromStart_); ok {
			return x.FromStart
		}
	}
	return nil
}

func (x *BaseSearchPaging_Cursor) GetAfterRecord() *BaseSearchPaging_Cursor_AfterRecord {
	if x != nil {
		if x, ok := x.Payload.(*BaseSearchPaging_Cursor_AfterRecord_); ok {
			return x.AfterRecord
		}
	}
	return nil
}

type isBaseSearchPaging_Cursor_Payload interface {
	isBaseSearchPaging_Cursor_Payload()
}

type BaseSearchPaging_Cursor_FromStart_ struct {
	FromStart *BaseSearchPaging_Cursor_FromStart `protobuf:"bytes,1,opt,name=from_start,json=fromStart,proto3,oneof"`
}

type BaseSearchPaging_Cursor_AfterRecord_ struct {
	AfterRecord *BaseSearchPaging_Cursor_AfterRecord `protobuf:"bytes,2,opt,name=after_record,json=afterRecord,proto3,oneof"`
}

func (*BaseSearchPaging_Cursor_FromStart_) isBaseSearchPaging_Cursor_Payload() {}

func (*BaseSearchPaging_Cursor_AfterRecord_) isBaseSearchPaging_Cursor_Payload() {}

type BaseSearchPaging_Skip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	OrderFactors  []*BaseSearchOrdering  `protobuf:"bytes,2,rep,name=order_factors,json=orderFactors,proto3" json:"order_factors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchPaging_Skip) Reset() {
	*x = BaseSearchPaging_Skip{}
	mi := &file_anipj_content_search_search_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchPaging_Skip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchPaging_Skip) ProtoMessage() {}

func (x *BaseSearchPaging_Skip) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchPaging_Skip.ProtoReflect.Descriptor instead.
func (*BaseSearchPaging_Skip) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{5, 1}
}

func (x *BaseSearchPaging_Skip) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *BaseSearchPaging_Skip) GetOrderFactors() []*BaseSearchOrdering {
	if x != nil {
		return x.OrderFactors
	}
	return nil
}

type BaseSearchPaging_Cursor_FromStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderFactors  []*BaseSearchOrdering  `protobuf:"bytes,2,rep,name=order_factors,json=orderFactors,proto3" json:"order_factors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchPaging_Cursor_FromStart) Reset() {
	*x = BaseSearchPaging_Cursor_FromStart{}
	mi := &file_anipj_content_search_search_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchPaging_Cursor_FromStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchPaging_Cursor_FromStart) ProtoMessage() {}

func (x *BaseSearchPaging_Cursor_FromStart) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchPaging_Cursor_FromStart.ProtoReflect.Descriptor instead.
func (*BaseSearchPaging_Cursor_FromStart) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *BaseSearchPaging_Cursor_FromStart) GetOrderFactors() []*BaseSearchOrdering {
	if x != nil {
		return x.OrderFactors
	}
	return nil
}

// значение продолжения выборки, при условиях сохранения фактора сортировки
type BaseSearchPaging_Cursor_AfterRecord struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Components    []*BaseSearchPaging_Cursor_Component `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchPaging_Cursor_AfterRecord) Reset() {
	*x = BaseSearchPaging_Cursor_AfterRecord{}
	mi := &file_anipj_content_search_search_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchPaging_Cursor_AfterRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchPaging_Cursor_AfterRecord) ProtoMessage() {}

func (x *BaseSearchPaging_Cursor_AfterRecord) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchPaging_Cursor_AfterRecord.ProtoReflect.Descriptor instead.
func (*BaseSearchPaging_Cursor_AfterRecord) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{5, 0, 1}
}

func (x *BaseSearchPaging_Cursor_AfterRecord) GetComponents() []*BaseSearchPaging_Cursor_Component {
	if x != nil {
		return x.Components
	}
	return nil
}

type BaseSearchPaging_Cursor_Component struct {
	state     protoimpl.MessageState    `protogen:"open.v1"`
	Direction search.Ordering_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=anipj.protobuf.search.Ordering_Direction" json:"direction,omitempty"`
	// Types that are valid to be assigned to Field:
	//
	//	*BaseSearchPaging_Cursor_Component_Id
	Field         isBaseSearchPaging_Cursor_Component_Field `protobuf_oneof:"Field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseSearchPaging_Cursor_Component) Reset() {
	*x = BaseSearchPaging_Cursor_Component{}
	mi := &file_anipj_content_search_search_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseSearchPaging_Cursor_Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSearchPaging_Cursor_Component) ProtoMessage() {}

func (x *BaseSearchPaging_Cursor_Component) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSearchPaging_Cursor_Component.ProtoReflect.Descriptor instead.
func (*BaseSearchPaging_Cursor_Component) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{5, 0, 2}
}

func (x *BaseSearchPaging_Cursor_Component) GetDirection() search.Ordering_Direction {
	if x != nil {
		return x.Direction
	}
	return search.Ordering_Direction(0)
}

func (x *BaseSearchPaging_Cursor_Component) GetField() isBaseSearchPaging_Cursor_Component_Field {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *BaseSearchPaging_Cursor_Component) GetId() int32 {
	if x != nil {
		if x, ok := x.Field.(*BaseSearchPaging_Cursor_Component_Id); ok {
			return x.Id
		}
	}
	return 0
}

type isBaseSearchPaging_Cursor_Component_Field interface {
	isBaseSearchPaging_Cursor_Component_Field()
}

type BaseSearchPaging_Cursor_Component_Id struct {
	Id int32 `protobuf:"varint,11,opt,name=id,proto3,oneof"`
}

func (*BaseSearchPaging_Cursor_Component_Id) isBaseSearchPaging_Cursor_Component_Field() {}

type TagSearchFilter_Group struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Filters       []*TagSearchFilter           `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Operator      search.Filter_Group_Operator `protobuf:"varint,2,opt,name=operator,proto3,enum=anipj.protobuf.search.Filter_Group_Operator" json:"operator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchFilter_Group) Reset() {
	*x = TagSearchFilter_Group{}
	mi := &file_anipj_content_search_search_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchFilter_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchFilter_Group) ProtoMessage() {}

func (x *TagSearchFilter_Group) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchFilter_Group.ProtoReflect.Descriptor instead.
func (*TagSearchFilter_Group) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TagSearchFilter_Group) GetFilters() []*TagSearchFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *TagSearchFilter_Group) GetOperator() search.Filter_Group_Operator {
	if x != nil {
		return x.Operator
	}
	return search.Filter_Group_Operator(0)
}

type TagSearchFilter_Condition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Field:
	//
	//	*TagSearchFilter_Condition_Id_
	//	*TagSearchFilter_Condition_IdRepeated_
	//	*TagSearchFilter_Condition_SystemOnly_
	//	*TagSearchFilter_Condition_SystemOnlyRepeated_
	//	*TagSearchFilter_Condition_AnyEntityTypeRepeated_
	Field         isTagSearchFilter_Condition_Field `protobuf_oneof:"Field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchFilter_Condition) Reset() {
	*x = TagSearchFilter_Condition{}
	mi := &file_anipj_content_search_search_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchFilter_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchFilter_Condition) ProtoMessage() {}

func (x *TagSearchFilter_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchFilter_Condition.ProtoReflect.Descriptor instead.
func (*TagSearchFilter_Condition) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1}
}

func (x *TagSearchFilter_Condition) GetField() isTagSearchFilter_Condition_Field {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *TagSearchFilter_Condition) GetId() *TagSearchFilter_Condition_Id {
	if x != nil {
		if x, ok := x.Field.(*TagSearchFilter_Condition_Id_); ok {
			return x.Id
		}
	}
	return nil
}

func (x *TagSearchFilter_Condition) GetIdRepeated() *TagSearchFilter_Condition_IdRepeated {
	if x != nil {
		if x, ok := x.Field.(*TagSearchFilter_Condition_IdRepeated_); ok {
			return x.IdRepeated
		}
	}
	return nil
}

func (x *TagSearchFilter_Condition) GetSystemOnly() *TagSearchFilter_Condition_SystemOnly {
	if x != nil {
		if x, ok := x.Field.(*TagSearchFilter_Condition_SystemOnly_); ok {
			return x.SystemOnly
		}
	}
	return nil
}

func (x *TagSearchFilter_Condition) GetSystemOnlyRepeated() *TagSearchFilter_Condition_SystemOnlyRepeated {
	if x != nil {
		if x, ok := x.Field.(*TagSearchFilter_Condition_SystemOnlyRepeated_); ok {
			return x.SystemOnlyRepeated
		}
	}
	return nil
}

func (x *TagSearchFilter_Condition) GetAnyEntityTypeRepeated() *TagSearchFilter_Condition_AnyEntityTypeRepeated {
	if x != nil {
		if x, ok := x.Field.(*TagSearchFilter_Condition_AnyEntityTypeRepeated_); ok {
			return x.AnyEntityTypeRepeated
		}
	}
	return nil
}

type isTagSearchFilter_Condition_Field interface {
	isTagSearchFilter_Condition_Field()
}

type TagSearchFilter_Condition_Id_ struct {
	Id *TagSearchFilter_Condition_Id `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type TagSearchFilter_Condition_IdRepeated_ struct {
	IdRepeated *TagSearchFilter_Condition_IdRepeated `protobuf:"bytes,1001,opt,name=id_repeated,json=idRepeated,proto3,oneof"`
}

type TagSearchFilter_Condition_SystemOnly_ struct {
	SystemOnly *TagSearchFilter_Condition_SystemOnly `protobuf:"bytes,2,opt,name=system_only,json=systemOnly,proto3,oneof"`
}

type TagSearchFilter_Condition_SystemOnlyRepeated_ struct {
	SystemOnlyRepeated *TagSearchFilter_Condition_SystemOnlyRepeated `protobuf:"bytes,1002,opt,name=system_only_repeated,json=systemOnlyRepeated,proto3,oneof"`
}

type TagSearchFilter_Condition_AnyEntityTypeRepeated_ struct {
	AnyEntityTypeRepeated *TagSearchFilter_Condition_AnyEntityTypeRepeated `protobuf:"bytes,1003,opt,name=any_entity_type_repeated,json=anyEntityTypeRepeated,proto3,oneof"`
}

func (*TagSearchFilter_Condition_Id_) isTagSearchFilter_Condition_Field() {}

func (*TagSearchFilter_Condition_IdRepeated_) isTagSearchFilter_Condition_Field() {}

func (*TagSearchFilter_Condition_SystemOnly_) isTagSearchFilter_Condition_Field() {}

func (*TagSearchFilter_Condition_SystemOnlyRepeated_) isTagSearchFilter_Condition_Field() {}

func (*TagSearchFilter_Condition_AnyEntityTypeRepeated_) isTagSearchFilter_Condition_Field() {}

type TagSearchFilter_FulltextSearchConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Config        SearchLanguage         `protobuf:"varint,2,opt,name=config,proto3,enum=anipj.content.v1dev.SearchLanguage" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchFilter_FulltextSearchConfig) Reset() {
	*x = TagSearchFilter_FulltextSearchConfig{}
	mi := &file_anipj_content_search_search_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchFilter_FulltextSearchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchFilter_FulltextSearchConfig) ProtoMessage() {}

func (x *TagSearchFilter_FulltextSearchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchFilter_FulltextSearchConfig.ProtoReflect.Descriptor instead.
func (*TagSearchFilter_FulltextSearchConfig) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 2}
}

func (x *TagSearchFilter_FulltextSearchConfig) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *TagSearchFilter_FulltextSearchConfig) GetConfig() SearchLanguage {
	if x != nil {
		return x.Config
	}
	return SearchLanguage_SEARCH_LANGUAGE_UNSPECIFIED
}

type TagSearchFilter_Condition_Id struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Value         string                                `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Function      TagSearchFilter_Condition_Id_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TagSearchFilter_Condition_Id_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchFilter_Condition_Id) Reset() {
	*x = TagSearchFilter_Condition_Id{}
	mi := &file_anipj_content_search_search_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchFilter_Condition_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchFilter_Condition_Id) ProtoMessage() {}

func (x *TagSearchFilter_Condition_Id) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchFilter_Condition_Id.ProtoReflect.Descriptor instead.
func (*TagSearchFilter_Condition_Id) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 0}
}

func (x *TagSearchFilter_Condition_Id) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TagSearchFilter_Condition_Id) GetFunction() TagSearchFilter_Condition_Id_Function {
	if x != nil {
		return x.Function
	}
	return TagSearchFilter_Condition_Id_UNSPECIFIED
}

type TagSearchFilter_Condition_IdRepeated struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Value         []string                                      `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	Function      TagSearchFilter_Condition_IdRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TagSearchFilter_Condition_IdRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchFilter_Condition_IdRepeated) Reset() {
	*x = TagSearchFilter_Condition_IdRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchFilter_Condition_IdRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchFilter_Condition_IdRepeated) ProtoMessage() {}

func (x *TagSearchFilter_Condition_IdRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchFilter_Condition_IdRepeated.ProtoReflect.Descriptor instead.
func (*TagSearchFilter_Condition_IdRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 1}
}

func (x *TagSearchFilter_Condition_IdRepeated) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TagSearchFilter_Condition_IdRepeated) GetFunction() TagSearchFilter_Condition_IdRepeated_Function {
	if x != nil {
		return x.Function
	}
	return TagSearchFilter_Condition_IdRepeated_UNSPECIFIED
}

type TagSearchFilter_Condition_SystemOnly struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Value         bool                                          `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Function      TagSearchFilter_Condition_SystemOnly_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TagSearchFilter_Condition_SystemOnly_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchFilter_Condition_SystemOnly) Reset() {
	*x = TagSearchFilter_Condition_SystemOnly{}
	mi := &file_anipj_content_search_search_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchFilter_Condition_SystemOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchFilter_Condition_SystemOnly) ProtoMessage() {}

func (x *TagSearchFilter_Condition_SystemOnly) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchFilter_Condition_SystemOnly.ProtoReflect.Descriptor instead.
func (*TagSearchFilter_Condition_SystemOnly) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 2}
}

func (x *TagSearchFilter_Condition_SystemOnly) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *TagSearchFilter_Condition_SystemOnly) GetFunction() TagSearchFilter_Condition_SystemOnly_Function {
	if x != nil {
		return x.Function
	}
	return TagSearchFilter_Condition_SystemOnly_UNSPECIFIED
}

type TagSearchFilter_Condition_SystemOnlyRepeated struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	Value         []bool                                                `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	Function      TagSearchFilter_Condition_SystemOnlyRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TagSearchFilter_Condition_SystemOnlyRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchFilter_Condition_SystemOnlyRepeated) Reset() {
	*x = TagSearchFilter_Condition_SystemOnlyRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchFilter_Condition_SystemOnlyRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchFilter_Condition_SystemOnlyRepeated) ProtoMessage() {}

func (x *TagSearchFilter_Condition_SystemOnlyRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchFilter_Condition_SystemOnlyRepeated.ProtoReflect.Descriptor instead.
func (*TagSearchFilter_Condition_SystemOnlyRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 3}
}

func (x *TagSearchFilter_Condition_SystemOnlyRepeated) GetValue() []bool {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TagSearchFilter_Condition_SystemOnlyRepeated) GetFunction() TagSearchFilter_Condition_SystemOnlyRepeated_Function {
	if x != nil {
		return x.Function
	}
	return TagSearchFilter_Condition_SystemOnlyRepeated_UNSPECIFIED
}

type TagSearchFilter_Condition_AnyEntityTypeRepeated struct {
	state         protoimpl.MessageState                                   `protogen:"open.v1"`
	Value         []EntityLink_Type                                        `protobuf:"varint,1,rep,packed,name=value,proto3,enum=anipj.content.v1dev.EntityLink_Type" json:"value,omitempty"`
	Function      TagSearchFilter_Condition_AnyEntityTypeRepeated_Function `protobuf:"varint,2,opt,name=function,proto3,enum=anipj.content.v1dev.TagSearchFilter_Condition_AnyEntityTypeRepeated_Function" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchFilter_Condition_AnyEntityTypeRepeated) Reset() {
	*x = TagSearchFilter_Condition_AnyEntityTypeRepeated{}
	mi := &file_anipj_content_search_search_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchFilter_Condition_AnyEntityTypeRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchFilter_Condition_AnyEntityTypeRepeated) ProtoMessage() {}

func (x *TagSearchFilter_Condition_AnyEntityTypeRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchFilter_Condition_AnyEntityTypeRepeated.ProtoReflect.Descriptor instead.
func (*TagSearchFilter_Condition_AnyEntityTypeRepeated) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{6, 1, 4}
}

func (x *TagSearchFilter_Condition_AnyEntityTypeRepeated) GetValue() []EntityLink_Type {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TagSearchFilter_Condition_AnyEntityTypeRepeated) GetFunction() TagSearchFilter_Condition_AnyEntityTypeRepeated_Function {
	if x != nil {
		return x.Function
	}
	return TagSearchFilter_Condition_AnyEntityTypeRepeated_UNSPECIFIED
}

type TagSearchPaging_Cursor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TagSearchPaging_Cursor_FromStart_
	//	*TagSearchPaging_Cursor_AfterRecord_
	Payload       isTagSearchPaging_Cursor_Payload `protobuf_oneof:"Payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchPaging_Cursor) Reset() {
	*x = TagSearchPaging_Cursor{}
	mi := &file_anipj_content_search_search_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchPaging_Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchPaging_Cursor) ProtoMessage() {}

func (x *TagSearchPaging_Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchPaging_Cursor.ProtoReflect.Descriptor instead.
func (*TagSearchPaging_Cursor) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{8, 0}
}

func (x *TagSearchPaging_Cursor) GetPayload() isTagSearchPaging_Cursor_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TagSearchPaging_Cursor) GetFromStart() *TagSearchPaging_Cursor_FromStart {
	if x != nil {
		if x, ok := x.Payload.(*TagSearchPaging_Cursor_FromStart_); ok {
			return x.FromStart
		}
	}
	return nil
}

func (x *TagSearchPaging_Cursor) GetAfterRecord() *TagSearchPaging_Cursor_AfterRecord {
	if x != nil {
		if x, ok := x.Payload.(*TagSearchPaging_Cursor_AfterRecord_); ok {
			return x.AfterRecord
		}
	}
	return nil
}

type isTagSearchPaging_Cursor_Payload interface {
	isTagSearchPaging_Cursor_Payload()
}

type TagSearchPaging_Cursor_FromStart_ struct {
	FromStart *TagSearchPaging_Cursor_FromStart `protobuf:"bytes,1,opt,name=from_start,json=fromStart,proto3,oneof"`
}

type TagSearchPaging_Cursor_AfterRecord_ struct {
	AfterRecord *TagSearchPaging_Cursor_AfterRecord `protobuf:"bytes,2,opt,name=after_record,json=afterRecord,proto3,oneof"`
}

func (*TagSearchPaging_Cursor_FromStart_) isTagSearchPaging_Cursor_Payload() {}

func (*TagSearchPaging_Cursor_AfterRecord_) isTagSearchPaging_Cursor_Payload() {}

type TagSearchPaging_Skip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	OrderFactors  []*TagSearchOrdering   `protobuf:"bytes,2,rep,name=order_factors,json=orderFactors,proto3" json:"order_factors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchPaging_Skip) Reset() {
	*x = TagSearchPaging_Skip{}
	mi := &file_anipj_content_search_search_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchPaging_Skip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchPaging_Skip) ProtoMessage() {}

func (x *TagSearchPaging_Skip) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchPaging_Skip.ProtoReflect.Descriptor instead.
func (*TagSearchPaging_Skip) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{8, 1}
}

func (x *TagSearchPaging_Skip) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TagSearchPaging_Skip) GetOrderFactors() []*TagSearchOrdering {
	if x != nil {
		return x.OrderFactors
	}
	return nil
}

type TagSearchPaging_Cursor_FromStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderFactors  []*TagSearchOrdering   `protobuf:"bytes,2,rep,name=order_factors,json=orderFactors,proto3" json:"order_factors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchPaging_Cursor_FromStart) Reset() {
	*x = TagSearchPaging_Cursor_FromStart{}
	mi := &file_anipj_content_search_search_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchPaging_Cursor_FromStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchPaging_Cursor_FromStart) ProtoMessage() {}

func (x *TagSearchPaging_Cursor_FromStart) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchPaging_Cursor_FromStart.ProtoReflect.Descriptor instead.
func (*TagSearchPaging_Cursor_FromStart) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *TagSearchPaging_Cursor_FromStart) GetOrderFactors() []*TagSearchOrdering {
	if x != nil {
		return x.OrderFactors
	}
	return nil
}

// значение продолжения выборки, при условиях сохранения фактора сортировки
type TagSearchPaging_Cursor_AfterRecord struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Components    []*TagSearchPaging_Cursor_Component `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchPaging_Cursor_AfterRecord) Reset() {
	*x = TagSearchPaging_Cursor_AfterRecord{}
	mi := &file_anipj_content_search_search_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchPaging_Cursor_AfterRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchPaging_Cursor_AfterRecord) ProtoMessage() {}

func (x *TagSearchPaging_Cursor_AfterRecord) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchPaging_Cursor_AfterRecord.ProtoReflect.Descriptor instead.
func (*TagSearchPaging_Cursor_AfterRecord) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{8, 0, 1}
}

func (x *TagSearchPaging_Cursor_AfterRecord) GetComponents() []*TagSearchPaging_Cursor_Component {
	if x != nil {
		return x.Components
	}
	return nil
}

type TagSearchPaging_Cursor_Component struct {
	state     protoimpl.MessageState    `protogen:"open.v1"`
	Direction search.Ordering_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=anipj.protobuf.search.Ordering_Direction" json:"direction,omitempty"`
	// Types that are valid to be assigned to Field:
	//
	//	*TagSearchPaging_Cursor_Component_Id
	//	*TagSearchPaging_Cursor_Component_SystemOnly
	Field         isTagSearchPaging_Cursor_Component_Field `protobuf_oneof:"Field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagSearchPaging_Cursor_Component) Reset() {
	*x = TagSearchPaging_Cursor_Component{}
	mi := &file_anipj_content_search_search_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagSearchPaging_Cursor_Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagSearchPaging_Cursor_Component) ProtoMessage() {}

func (x *TagSearchPaging_Cursor_Component) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_search_search_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagSearchPaging_Cursor_Component.ProtoReflect.Descriptor instead.
func (*TagSearchPaging_Cursor_Component) Descriptor() ([]byte, []int) {
	return file_anipj_content_search_search_proto_rawDescGZIP(), []int{8, 0, 2}
}

func (x *TagSearchPaging_Cursor_Component) GetDirection() search.Ordering_Direction {
	if x != nil {
		return x.Direction
	}
	return search.Ordering_Direction(0)
}

func (x *TagSearchPaging_Cursor_Component) GetField() isTagSearchPaging_Cursor_Component_Field {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *TagSearchPaging_Cursor_Component) GetId() string {
	if x != nil {
		if x, ok := x.Field.(*TagSearchPaging_Cursor_Component_Id); ok {
			return x.Id
		}
	}
	return ""
}

func (x *TagSearchPaging_Cursor_Component) GetSystemOnly() bool {
	if x != nil {
		if x, ok := x.Field.(*TagSearchPaging_Cursor_Component_SystemOnly); ok {
			return x.SystemOnly
		}
	}
	return false
}

type isTagSearchPaging_Cursor_Component_Field interface {
	isTagSearchPaging_Cursor_Component_Field()
}

type TagSearchPaging_Cursor_Component_Id struct {
	Id string `protobuf:"bytes,11,opt,name=id,proto3,oneof"`
}

type TagSearchPaging_Cursor_Component_SystemOnly struct {
	SystemOnly bool `protobuf:"varint,12,opt,name=system_only,json=systemOnly,proto3,oneof"`
}

func (*TagSearchPaging_Cursor_Component_Id) isTagSearchPaging_Cursor_Component_Field() {}

func (*TagSearchPaging_Cursor_Component_SystemOnly) isTagSearchPaging_Cursor_Component_Field() {}

var File_anipj_content_search_search_proto protoreflect.FileDescriptor

var file_anipj_content_search_search_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x1a, 0x22, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x1b, 0x0a, 0x11, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x66, 0x0a, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x75, 0x6c,
	0x6c, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x93, 0x01, 0x0a, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x40, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x69, 0x70,
	0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x1a, 0xea, 0x16, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x45, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5f, 0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x66,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x7b, 0x0a, 0x15, 0x66, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x13, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x8a, 0x01, 0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x18, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x75, 0x0a, 0x13, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xec, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x0b, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x52, 0x0a, 0x07, 0x61,
	0x6e, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x6e, 0x79, 0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x67, 0x12,
	0x6c, 0x0a, 0x10, 0x61, 0x6e, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0xee, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x79,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x61,
	0x6e, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0xd9, 0x01,
	0x0a, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x08,
	0x0a, 0x04, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x53, 0x53,
	0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x06, 0x1a, 0xa9, 0x01, 0x0a, 0x0a, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x60,
	0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x44, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x23, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x49, 0x4e, 0x10, 0x02, 0x1a, 0xeb, 0x01, 0x0a, 0x0b, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x61, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63,
	0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45,
	0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f,
	0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x53, 0x53,
	0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c,
	0x53, 0x10, 0x06, 0x1a, 0xbb, 0x01, 0x0a, 0x13, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x69, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x08,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10,
	0x02, 0x1a, 0xec, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3b,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x6e, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x08, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10, 0x02,
	0x1a, 0xd7, 0x01, 0x0a, 0x11, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x41, 0x6e, 0x69, 0x6d,
	0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x67, 0x0a, 0x08,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b,
	0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10, 0x02, 0x1a, 0x85, 0x02, 0x0a, 0x0a, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x60, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a,
	0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x51,
	0x55, 0x41, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x45,
	0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x53, 0x53, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53,
	0x10, 0x06, 0x1a, 0xec, 0x01, 0x0a, 0x06, 0x41, 0x6e, 0x79, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x5c, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x79, 0x54, 0x61, 0x67, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x6e, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c,
	0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x45, 0x51,
	0x55, 0x41, 0x4c, 0x53, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x47, 0x45, 0x58, 0x10,
	0x07, 0x1a, 0xb1, 0x01, 0x0a, 0x0e, 0x41, 0x6e, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x64, 0x0a, 0x08, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x6e, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x23, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x49, 0x4e, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x69,
	0x0a, 0x14, 0x46, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0x90, 0x02, 0x0a, 0x13, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x44, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x47, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x05, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x46, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x49, 0x53, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x4e, 0x49, 0x4d, 0x45, 0x5f,
	0x4b, 0x49, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53,
	0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x05, 0x22, 0xad, 0x08, 0x0a, 0x11, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x47, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x73, 0x6b,
	0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x6b, 0x69, 0x70, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x1a, 0xfe, 0x05,
	0x0a, 0x06, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x58, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x5e, 0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x1a, 0x5a, 0x0a, 0x09, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x4d, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x66,
	0x0a, 0x0b, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x57, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xea, 0x02, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x64, 0x65, 0x76, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x6b,
	0x0a, 0x04, 0x53, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4d, 0x0a, 0x0d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0xda, 0x0d, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x65,
	0x0a, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x46,
	0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x92, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x3f, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x48, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0xa1, 0x09, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5e,
	0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xe9, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x51,
	0x0a, 0x07, 0x61, 0x6e, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x6e, 0x79, 0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6e, 0x79, 0x54, 0x61,
	0x67, 0x12, 0x6b, 0x0a, 0x10, 0x61, 0x6e, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e,
	0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e,
	0x61, 0x6e, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0xd8,
	0x01, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x08,
	0x0a, 0x04, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x53, 0x53,
	0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x06, 0x1a, 0xa8, 0x01, 0x0a, 0x0a, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5f,
	0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x43, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x23, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x49, 0x4e, 0x10, 0x02, 0x1a, 0xeb, 0x01, 0x0a, 0x06, 0x41, 0x6e, 0x79, 0x54, 0x61, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5b, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x79, 0x54, 0x61, 0x67, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x47,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x4c, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x45,
	0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x47, 0x45, 0x58,
	0x10, 0x07, 0x1a, 0xb0, 0x01, 0x0a, 0x0e, 0x41, 0x6e, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x63, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x6e, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x23, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x49, 0x4e, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x69,
	0x0a, 0x14, 0x46, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x47, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x05, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x44, 0x10, 0x01, 0x22, 0xa9, 0x06, 0x0a, 0x10,
	0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04,
	0x73, 0x6b, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x1a, 0xfe,
	0x03, 0x0a, 0x06, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x5d, 0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x1a, 0x59, 0x0a, 0x09, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x4c,
	0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x65, 0x0a, 0x0b,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x56, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x6f, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x47, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0x6a, 0x0a, 0x04, 0x53, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4c, 0x0a,
	0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0xde, 0x10, 0x0a, 0x0f, 0x54, 0x61, 0x67, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x64, 0x0a, 0x0f, 0x66,
	0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x74,
	0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x00, 0x52, 0x0e, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x1a, 0x91, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3e, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0xaa, 0x0c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5d, 0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4f, 0x6e, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x76, 0x0a, 0x14, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xea, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x6e, 0x6c, 0x79, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x80, 0x01,
	0x0a, 0x18, 0x61, 0x6e, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x6e, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x15, 0x61, 0x6e, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x1a, 0xe2, 0x01, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x56, 0x0a,
	0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3a, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x49, 0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x47,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x53,
	0x53, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45,
	0x47, 0x45, 0x58, 0x10, 0x07, 0x1a, 0xa7, 0x01, 0x0a, 0x0a, 0x49, 0x64, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5e, 0x0a, 0x08, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x08, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10, 0x02, 0x1a,
	0xe7, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x5e, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x6e, 0x6c,
	0x79, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x08,
	0x0a, 0x04, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x53, 0x53,
	0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x06, 0x1a, 0xb7, 0x01, 0x0a, 0x12, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x66, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54,
	0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f,
	0x6e, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23,
	0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49,
	0x4e, 0x10, 0x02, 0x1a, 0xe3, 0x01, 0x0a, 0x15, 0x41, 0x6e, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x69, 0x0a, 0x08, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x1a, 0x69, 0x0a, 0x14, 0x46, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a,
	0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x11, 0x54, 0x61, 0x67,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x42,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x47, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x05, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x22, 0xc5,
	0x06, 0x0a, 0x0f, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x3f, 0x0a,
	0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x1a, 0x9e,
	0x04, 0x0a, 0x06, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x56, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x5c, 0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61,
	0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a,
	0x58, 0x0a, 0x09, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x4b, 0x0a, 0x0d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x64, 0x0a, 0x0b, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x55, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0x92, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x6e, 0x6c, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0x69, 0x0a, 0x04, 0x53, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4b, 0x0a,
	0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x29, 0x5a, 0x0d, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0xaa, 0x02, 0x17, 0x41, 0x6e, 0x69, 0x70, 0x6a, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_anipj_content_search_search_proto_rawDescOnce sync.Once
	file_anipj_content_search_search_proto_rawDescData []byte
)

func file_anipj_content_search_search_proto_rawDescGZIP() []byte {
	file_anipj_content_search_search_proto_rawDescOnce.Do(func() {
		file_anipj_content_search_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anipj_content_search_search_proto_rawDesc), len(file_anipj_content_search_search_proto_rawDesc)))
	})
	return file_anipj_content_search_search_proto_rawDescData
}

var file_anipj_content_search_search_proto_enumTypes = make([]protoimpl.EnumInfo, 21)
var file_anipj_content_search_search_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_anipj_content_search_search_proto_goTypes = []any{
	(TitleSearchFilter_Condition_Id_Function)(0),                       // 0: anipj.content.v1dev.TitleSearchFilter.Condition.Id.Function
	(TitleSearchFilter_Condition_IdRepeated_Function)(0),               // 1: anipj.content.v1dev.TitleSearchFilter.Condition.IdRepeated.Function
	(TitleSearchFilter_Condition_FranchiseId_Function)(0),              // 2: anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseId.Function
	(TitleSearchFilter_Condition_FranchiseIdRepeated_Function)(0),      // 3: anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseIdRepeated.Function
	(TitleSearchFilter_Condition_ProductionStatusRepeated_Function)(0), // 4: anipj.content.v1dev.TitleSearchFilter.Condition.ProductionStatusRepeated.Function
	(TitleSearchFilter_Condition_AnimeKindRepeated_Function)(0),        // 5: anipj.content.v1dev.TitleSearchFilter.Condition.AnimeKindRepeated.Function
	(TitleSearchFilter_Condition_ReleasedAt_Function)(0),               // 6: anipj.content.v1dev.TitleSearchFilter.Condition.ReleasedAt.Function
	(TitleSearchFilter_Condition_AnyTag_Function)(0),                   // 7: anipj.content.v1dev.TitleSearchFilter.Condition.AnyTag.Function
	(TitleSearchFilter_Condition_AnyTagRepeated_Function)(0),           // 8: anipj.content.v1dev.TitleSearchFilter.Condition.AnyTagRepeated.Function
	(TitleSearchOrdering_Field)(0),                                     // 9: anipj.content.v1dev.TitleSearchOrdering.Field
	(BaseSearchFilter_Condition_Id_Function)(0),                        // 10: anipj.content.v1dev.BaseSearchFilter.Condition.Id.Function
	(BaseSearchFilter_Condition_IdRepeated_Function)(0),                // 11: anipj.content.v1dev.BaseSearchFilter.Condition.IdRepeated.Function
	(BaseSearchFilter_Condition_AnyTag_Function)(0),                    // 12: anipj.content.v1dev.BaseSearchFilter.Condition.AnyTag.Function
	(BaseSearchFilter_Condition_AnyTagRepeated_Function)(0),            // 13: anipj.content.v1dev.BaseSearchFilter.Condition.AnyTagRepeated.Function
	(BaseSearchOrdering_Field)(0),                                      // 14: anipj.content.v1dev.BaseSearchOrdering.Field
	(TagSearchFilter_Condition_Id_Function)(0),                         // 15: anipj.content.v1dev.TagSearchFilter.Condition.Id.Function
	(TagSearchFilter_Condition_IdRepeated_Function)(0),                 // 16: anipj.content.v1dev.TagSearchFilter.Condition.IdRepeated.Function
	(TagSearchFilter_Condition_SystemOnly_Function)(0),                 // 17: anipj.content.v1dev.TagSearchFilter.Condition.SystemOnly.Function
	(TagSearchFilter_Condition_SystemOnlyRepeated_Function)(0),         // 18: anipj.content.v1dev.TagSearchFilter.Condition.SystemOnlyRepeated.Function
	(TagSearchFilter_Condition_AnyEntityTypeRepeated_Function)(0),      // 19: anipj.content.v1dev.TagSearchFilter.Condition.AnyEntityTypeRepeated.Function
	(TagSearchOrdering_Field)(0),                                       // 20: anipj.content.v1dev.TagSearchOrdering.Field
	(*TitleSearchFilter)(nil),                                          // 21: anipj.content.v1dev.TitleSearchFilter
	(*TitleSearchOrdering)(nil),                                        // 22: anipj.content.v1dev.TitleSearchOrdering
	(*TitleSearchPaging)(nil),                                          // 23: anipj.content.v1dev.TitleSearchPaging
	(*BaseSearchFilter)(nil),                                           // 24: anipj.content.v1dev.BaseSearchFilter
	(*BaseSearchOrdering)(nil),                                         // 25: anipj.content.v1dev.BaseSearchOrdering
	(*BaseSearchPaging)(nil),                                           // 26: anipj.content.v1dev.BaseSearchPaging
	(*TagSearchFilter)(nil),                                            // 27: anipj.content.v1dev.TagSearchFilter
	(*TagSearchOrdering)(nil),                                          // 28: anipj.content.v1dev.TagSearchOrdering
	(*TagSearchPaging)(nil),                                            // 29: anipj.content.v1dev.TagSearchPaging
	(*TitleSearchFilter_Group)(nil),                                    // 30: anipj.content.v1dev.TitleSearchFilter.Group
	(*TitleSearchFilter_Condition)(nil),                                // 31: anipj.content.v1dev.TitleSearchFilter.Condition
	(*TitleSearchFilter_FulltextSearchConfig)(nil),                     // 32: anipj.content.v1dev.TitleSearchFilter.FulltextSearchConfig
	(*TitleSearchFilter_Condition_Id)(nil),                             // 33: anipj.content.v1dev.TitleSearchFilter.Condition.Id
	(*TitleSearchFilter_Condition_IdRepeated)(nil),                     // 34: anipj.content.v1dev.TitleSearchFilter.Condition.IdRepeated
	(*TitleSearchFilter_Condition_FranchiseId)(nil),                    // 35: anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseId
	(*TitleSearchFilter_Condition_FranchiseIdRepeated)(nil),            // 36: anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseIdRepeated
	(*TitleSearchFilter_Condition_ProductionStatusRepeated)(nil),       // 37: anipj.content.v1dev.TitleSearchFilter.Condition.ProductionStatusRepeated
	(*TitleSearchFilter_Condition_AnimeKindRepeated)(nil),              // 38: anipj.content.v1dev.TitleSearchFilter.Condition.AnimeKindRepeated
	(*TitleSearchFilter_Condition_ReleasedAt)(nil),                     // 39: anipj.content.v1dev.TitleSearchFilter.Condition.ReleasedAt
	(*TitleSearchFilter_Condition_AnyTag)(nil),                         // 40: anipj.content.v1dev.TitleSearchFilter.Condition.AnyTag
	(*TitleSearchFilter_Condition_AnyTagRepeated)(nil),                 // 41: anipj.content.v1dev.TitleSearchFilter.Condition.AnyTagRepeated
	(*TitleSearchPaging_Cursor)(nil),                                   // 42: anipj.content.v1dev.TitleSearchPaging.Cursor
	(*TitleSearchPaging_Skip)(nil),                                     // 43: anipj.content.v1dev.TitleSearchPaging.Skip
	(*TitleSearchPaging_Cursor_FromStart)(nil),                         // 44: anipj.content.v1dev.TitleSearchPaging.Cursor.FromStart
	(*TitleSearchPaging_Cursor_AfterRecord)(nil),                       // 45: anipj.content.v1dev.TitleSearchPaging.Cursor.AfterRecord
	(*TitleSearchPaging_Cursor_Component)(nil),                         // 46: anipj.content.v1dev.TitleSearchPaging.Cursor.Component
	(*BaseSearchFilter_Group)(nil),                                     // 47: anipj.content.v1dev.BaseSearchFilter.Group
	(*BaseSearchFilter_Condition)(nil),                                 // 48: anipj.content.v1dev.BaseSearchFilter.Condition
	(*BaseSearchFilter_FulltextSearchConfig)(nil),                      // 49: anipj.content.v1dev.BaseSearchFilter.FulltextSearchConfig
	(*BaseSearchFilter_Condition_Id)(nil),                              // 50: anipj.content.v1dev.BaseSearchFilter.Condition.Id
	(*BaseSearchFilter_Condition_IdRepeated)(nil),                      // 51: anipj.content.v1dev.BaseSearchFilter.Condition.IdRepeated
	(*BaseSearchFilter_Condition_AnyTag)(nil),                          // 52: anipj.content.v1dev.BaseSearchFilter.Condition.AnyTag
	(*BaseSearchFilter_Condition_AnyTagRepeated)(nil),                  // 53: anipj.content.v1dev.BaseSearchFilter.Condition.AnyTagRepeated
	(*BaseSearchPaging_Cursor)(nil),                                    // 54: anipj.content.v1dev.BaseSearchPaging.Cursor
	(*BaseSearchPaging_Skip)(nil),                                      // 55: anipj.content.v1dev.BaseSearchPaging.Skip
	(*BaseSearchPaging_Cursor_FromStart)(nil),                          // 56: anipj.content.v1dev.BaseSearchPaging.Cursor.FromStart
	(*BaseSearchPaging_Cursor_AfterRecord)(nil),                        // 57: anipj.content.v1dev.BaseSearchPaging.Cursor.AfterRecord
	(*BaseSearchPaging_Cursor_Component)(nil),                          // 58: anipj.content.v1dev.BaseSearchPaging.Cursor.Component
	(*TagSearchFilter_Group)(nil),                                      // 59: anipj.content.v1dev.TagSearchFilter.Group
	(*TagSearchFilter_Condition)(nil),                                  // 60: anipj.content.v1dev.TagSearchFilter.Condition
	(*TagSearchFilter_FulltextSearchConfig)(nil),                       // 61: anipj.content.v1dev.TagSearchFilter.FulltextSearchConfig
	(*TagSearchFilter_Condition_Id)(nil),                               // 62: anipj.content.v1dev.TagSearchFilter.Condition.Id
	(*TagSearchFilter_Condition_IdRepeated)(nil),                       // 63: anipj.content.v1dev.TagSearchFilter.Condition.IdRepeated
	(*TagSearchFilter_Condition_SystemOnly)(nil),                       // 64: anipj.content.v1dev.TagSearchFilter.Condition.SystemOnly
	(*TagSearchFilter_Condition_SystemOnlyRepeated)(nil),               // 65: anipj.content.v1dev.TagSearchFilter.Condition.SystemOnlyRepeated
	(*TagSearchFilter_Condition_AnyEntityTypeRepeated)(nil),            // 66: anipj.content.v1dev.TagSearchFilter.Condition.AnyEntityTypeRepeated
	(*TagSearchPaging_Cursor)(nil),                                     // 67: anipj.content.v1dev.TagSearchPaging.Cursor
	(*TagSearchPaging_Skip)(nil),                                       // 68: anipj.content.v1dev.TagSearchPaging.Skip
	(*TagSearchPaging_Cursor_FromStart)(nil),                           // 69: anipj.content.v1dev.TagSearchPaging.Cursor.FromStart
	(*TagSearchPaging_Cursor_AfterRecord)(nil),                         // 70: anipj.content.v1dev.TagSearchPaging.Cursor.AfterRecord
	(*TagSearchPaging_Cursor_Component)(nil),                           // 71: anipj.content.v1dev.TagSearchPaging.Cursor.Component
	(search.Ordering_Direction)(0),                                     // 72: anipj.protobuf.search.Ordering.Direction
	(search.Filter_Group_Operator)(0),                                  // 73: anipj.protobuf.search.Filter.Group.Operator
	(SearchLanguage)(0),                                                // 74: anipj.content.v1dev.SearchLanguage
	(ProductionStatus)(0),                                              // 75: anipj.content.v1dev.ProductionStatus
	(AnimeKind)(0),                                                     // 76: anipj.content.v1dev.AnimeKind
	(*timestamppb.Timestamp)(nil),                                      // 77: google.protobuf.Timestamp
	(EntityLink_Type)(0),                                               // 78: anipj.content.v1dev.EntityLink.Type
}
var file_anipj_content_search_search_proto_depIdxs = []int32{
	31, // 0: anipj.content.v1dev.TitleSearchFilter.condition:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition
	30, // 1: anipj.content.v1dev.TitleSearchFilter.group:type_name -> anipj.content.v1dev.TitleSearchFilter.Group
	32, // 2: anipj.content.v1dev.TitleSearchFilter.fulltext_search:type_name -> anipj.content.v1dev.TitleSearchFilter.FulltextSearchConfig
	9,  // 3: anipj.content.v1dev.TitleSearchOrdering.field:type_name -> anipj.content.v1dev.TitleSearchOrdering.Field
	72, // 4: anipj.content.v1dev.TitleSearchOrdering.direction:type_name -> anipj.protobuf.search.Ordering.Direction
	42, // 5: anipj.content.v1dev.TitleSearchPaging.cursor:type_name -> anipj.content.v1dev.TitleSearchPaging.Cursor
	43, // 6: anipj.content.v1dev.TitleSearchPaging.skip:type_name -> anipj.content.v1dev.TitleSearchPaging.Skip
	48, // 7: anipj.content.v1dev.BaseSearchFilter.condition:type_name -> anipj.content.v1dev.BaseSearchFilter.Condition
	47, // 8: anipj.content.v1dev.BaseSearchFilter.group:type_name -> anipj.content.v1dev.BaseSearchFilter.Group
	49, // 9: anipj.content.v1dev.BaseSearchFilter.fulltext_search:type_name -> anipj.content.v1dev.BaseSearchFilter.FulltextSearchConfig
	14, // 10: anipj.content.v1dev.BaseSearchOrdering.field:type_name -> anipj.content.v1dev.BaseSearchOrdering.Field
	72, // 11: anipj.content.v1dev.BaseSearchOrdering.direction:type_name -> anipj.protobuf.search.Ordering.Direction
	54, // 12: anipj.content.v1dev.BaseSearchPaging.cursor:type_name -> anipj.content.v1dev.BaseSearchPaging.Cursor
	55, // 13: anipj.content.v1dev.BaseSearchPaging.skip:type_name -> anipj.content.v1dev.BaseSearchPaging.Skip
	60, // 14: anipj.content.v1dev.TagSearchFilter.condition:type_name -> anipj.content.v1dev.TagSearchFilter.Condition
	59, // 15: anipj.content.v1dev.TagSearchFilter.group:type_name -> anipj.content.v1dev.TagSearchFilter.Group
	61, // 16: anipj.content.v1dev.TagSearchFilter.fulltext_search:type_name -> anipj.content.v1dev.TagSearchFilter.FulltextSearchConfig
	20, // 17: anipj.content.v1dev.TagSearchOrdering.field:type_name -> anipj.content.v1dev.TagSearchOrdering.Field
	72, // 18: anipj.content.v1dev.TagSearchOrdering.direction:type_name -> anipj.protobuf.search.Ordering.Direction
	67, // 19: anipj.content.v1dev.TagSearchPaging.cursor:type_name -> anipj.content.v1dev.TagSearchPaging.Cursor
	68, // 20: anipj.content.v1dev.TagSearchPaging.skip:type_name -> anipj.content.v1dev.TagSearchPaging.Skip
	21, // 21: anipj.content.v1dev.TitleSearchFilter.Group.filters:type_name -> anipj.content.v1dev.TitleSearchFilter
	73, // 22: anipj.content.v1dev.TitleSearchFilter.Group.operator:type_name -> anipj.protobuf.search.Filter.Group.Operator
	33, // 23: anipj.content.v1dev.TitleSearchFilter.Condition.id:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.Id
	34, // 24: anipj.content.v1dev.TitleSearchFilter.Condition.id_repeated:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.IdRepeated
	35, // 25: anipj.content.v1dev.TitleSearchFilter.Condition.franchise_id:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseId
	36, // 26: anipj.content.v1dev.TitleSearchFilter.Condition.franchise_id_repeated:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseIdRepeated
	37, // 27: anipj.content.v1dev.TitleSearchFilter.Condition.production_status_repeated:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.ProductionStatusRepeated
	38, // 28: anipj.content.v1dev.TitleSearchFilter.Condition.anime_kind_repeated:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.AnimeKindRepeated
	39, // 29: anipj.content.v1dev.TitleSearchFilter.Condition.released_at:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.ReleasedAt
	40, // 30: anipj.content.v1dev.TitleSearchFilter.Condition.any_tag:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.AnyTag
	41, // 31: anipj.content.v1dev.TitleSearchFilter.Condition.any_tag_repeated:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.AnyTagRepeated
	74, // 32: anipj.content.v1dev.TitleSearchFilter.FulltextSearchConfig.config:type_name -> anipj.content.v1dev.SearchLanguage
	0,  // 33: anipj.content.v1dev.TitleSearchFilter.Condition.Id.function:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.Id.Function
	1,  // 34: anipj.content.v1dev.TitleSearchFilter.Condition.IdRepeated.function:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.IdRepeated.Function
	2,  // 35: anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseId.function:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseId.Function
	3,  // 36: anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseIdRepeated.function:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.FranchiseIdRepeated.Function
	75, // 37: anipj.content.v1dev.TitleSearchFilter.Condition.ProductionStatusRepeated.value:type_name -> anipj.content.v1dev.ProductionStatus
	4,  // 38: anipj.content.v1dev.TitleSearchFilter.Condition.ProductionStatusRepeated.function:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.ProductionStatusRepeated.Function
	76, // 39: anipj.content.v1dev.TitleSearchFilter.Condition.AnimeKindRepeated.value:type_name -> anipj.content.v1dev.AnimeKind
	5,  // 40: anipj.content.v1dev.TitleSearchFilter.Condition.AnimeKindRepeated.function:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.AnimeKindRepeated.Function
	77, // 41: anipj.content.v1dev.TitleSearchFilter.Condition.ReleasedAt.value:type_name -> google.protobuf.Timestamp
	6,  // 42: anipj.content.v1dev.TitleSearchFilter.Condition.ReleasedAt.function:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.ReleasedAt.Function
	7,  // 43: anipj.content.v1dev.TitleSearchFilter.Condition.AnyTag.function:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.AnyTag.Function
	8,  // 44: anipj.content.v1dev.TitleSearchFilter.Condition.AnyTagRepeated.function:type_name -> anipj.content.v1dev.TitleSearchFilter.Condition.AnyTagRepeated.Function
	44, // 45: anipj.content.v1dev.TitleSearchPaging.Cursor.from_start:type_name -> anipj.content.v1dev.TitleSearchPaging.Cursor.FromStart
	45, // 46: anipj.content.v1dev.TitleSearchPaging.Cursor.after_record:type_name -> anipj.content.v1dev.TitleSearchPaging.Cursor.AfterRecord
	22, // 47: anipj.content.v1dev.TitleSearchPaging.Skip.order_factors:type_name -> anipj.content.v1dev.TitleSearchOrdering
	22, // 48: anipj.content.v1dev.TitleSearchPaging.Cursor.FromStart.order_factors:type_name -> anipj.content.v1dev.TitleSearchOrdering
	46, // 49: anipj.content.v1dev.TitleSearchPaging.Cursor.AfterRecord.components:type_name -> anipj.content.v1dev.TitleSearchPaging.Cursor.Component
	72, // 50: anipj.content.v1dev.TitleSearchPaging.Cursor.Component.direction:type_name -> anipj.protobuf.search.Ordering.Direction
	75, // 51: anipj.content.v1dev.TitleSearchPaging.Cursor.Component.production_status:type_name -> anipj.content.v1dev.ProductionStatus
	76, // 52: anipj.content.v1dev.TitleSearchPaging.Cursor.Component.anime_kind:type_name -> anipj.content.v1dev.AnimeKind
	77, // 53: anipj.content.v1dev.TitleSearchPaging.Cursor.Component.released_at:type_name -> google.protobuf.Timestamp
	24, // 54: anipj.content.v1dev.BaseSearchFilter.Group.filters:type_name -> anipj.content.v1dev.BaseSearchFilter
	73, // 55: anipj.content.v1dev.BaseSearchFilter.Group.operator:type_name -> anipj.protobuf.search.Filter.Group.Operator
	50, // 56: anipj.content.v1dev.BaseSearchFilter.Condition.id:type_name -> anipj.content.v1dev.BaseSearchFilter.Condition.Id
	51, // 57: anipj.content.v1dev.BaseSearchFilter.Condition.id_repeated:type_name -> anipj.content.v1dev.BaseSearchFilter.Condition.IdRepeated
	52, // 58: anipj.content.v1dev.BaseSearchFilter.Condition.any_tag:type_name -> anipj.content.v1dev.BaseSearchFilter.Condition.AnyTag
	53, // 59: anipj.content.v1dev.BaseSearchFilter.Condition.any_tag_repeated:type_name -> anipj.content.v1dev.BaseSearchFilter.Condition.AnyTagRepeated
	74, // 60: anipj.content.v1dev.BaseSearchFilter.FulltextSearchConfig.config:type_name -> anipj.content.v1dev.SearchLanguage
	10, // 61: anipj.content.v1dev.BaseSearchFilter.Condition.Id.function:type_name -> anipj.content.v1dev.BaseSearchFilter.Condition.Id.Function
	11, // 62: anipj.content.v1dev.BaseSearchFilter.Condition.IdRepeated.function:type_name -> anipj.content.v1dev.BaseSearchFilter.Condition.IdRepeated.Function
	12, // 63: anipj.content.v1dev.BaseSearchFilter.Condition.AnyTag.function:type_name -> anipj.content.v1dev.BaseSearchFilter.Condition.AnyTag.Function
	13, // 64: anipj.content.v1dev.BaseSearchFilter.Condition.AnyTagRepeated.function:type_name -> anipj.content.v1dev.BaseSearchFilter.Condition.AnyTagRepeated.Function
	56, // 65: anipj.content.v1dev.BaseSearchPaging.Cursor.from_start:type_name -> anipj.content.v1dev.BaseSearchPaging.Cursor.FromStart
	57, // 66: anipj.content.v1dev.BaseSearchPaging.Cursor.after_record:type_name -> anipj.content.v1dev.BaseSearchPaging.Cursor.AfterRecord
	25, // 67: anipj.content.v1dev.BaseSearchPaging.Skip.order_factors:type_name -> anipj.content.v1dev.BaseSearchOrdering
	25, // 68: anipj.content.v1dev.BaseSearchPaging.Cursor.FromStart.order_factors:type_name -> anipj.content.v1dev.BaseSearchOrdering
	58, // 69: anipj.content.v1dev.BaseSearchPaging.Cursor.AfterRecord.components:type_name -> anipj.content.v1dev.BaseSearchPaging.Cursor.Component
	72, // 70: anipj.content.v1dev.BaseSearchPaging.Cursor.Component.direction:type_name -> anipj.protobuf.search.Ordering.Direction
	27, // 71: anipj.content.v1dev.TagSearchFilter.Group.filters:type_name -> anipj.content.v1dev.TagSearchFilter
	73, // 72: anipj.content.v1dev.TagSearchFilter.Group.operator:type_name -> anipj.protobuf.search.Filter.Group.Operator
	62, // 73: anipj.content.v1dev.TagSearchFilter.Condition.id:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.Id
	63, // 74: anipj.content.v1dev.TagSearchFilter.Condition.id_repeated:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.IdRepeated
	64, // 75: anipj.content.v1dev.TagSearchFilter.Condition.system_only:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.SystemOnly
	65, // 76: anipj.content.v1dev.TagSearchFilter.Condition.system_only_repeated:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.SystemOnlyRepeated
	66, // 77: anipj.content.v1dev.TagSearchFilter.Condition.any_entity_type_repeated:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.AnyEntityTypeRepeated
	74, // 78: anipj.content.v1dev.TagSearchFilter.FulltextSearchConfig.config:type_name -> anipj.content.v1dev.SearchLanguage
	15, // 79: anipj.content.v1dev.TagSearchFilter.Condition.Id.function:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.Id.Function
	16, // 80: anipj.content.v1dev.TagSearchFilter.Condition.IdRepeated.function:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.IdRepeated.Function
	17, // 81: anipj.content.v1dev.TagSearchFilter.Condition.SystemOnly.function:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.SystemOnly.Function
	18, // 82: anipj.content.v1dev.TagSearchFilter.Condition.SystemOnlyRepeated.function:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.SystemOnlyRepeated.Function
	78, // 83: anipj.content.v1dev.TagSearchFilter.Condition.AnyEntityTypeRepeated.value:type_name -> anipj.content.v1dev.EntityLink.Type
	19, // 84: anipj.content.v1dev.TagSearchFilter.Condition.AnyEntityTypeRepeated.function:type_name -> anipj.content.v1dev.TagSearchFilter.Condition.AnyEntityTypeRepeated.Function
	69, // 85: anipj.content.v1dev.TagSearchPaging.Cursor.from_start:type_name -> anipj.content.v1dev.TagSearchPaging.Cursor.FromStart
	70, // 86: anipj.content.v1dev.TagSearchPaging.Cursor.after_record:type_name -> anipj.content.v1dev.TagSearchPaging.Cursor.AfterRecord
	28, // 87: anipj.content.v1dev.TagSearchPaging.Skip.order_factors:type_name -> anipj.content.v1dev.TagSearchOrdering
	28, // 88: anipj.content.v1dev.TagSearchPaging.Cursor.FromStart.order_factors:type_name -> anipj.content.v1dev.TagSearchOrdering
	71, // 89: anipj.content.v1dev.TagSearchPaging.Cursor.AfterRecord.components:type_name -> anipj.content.v1dev.TagSearchPaging.Cursor.Component
	72, // 90: anipj.content.v1dev.TagSearchPaging.Cursor.Component.direction:type_name -> anipj.protobuf.search.Ordering.Direction
	91, // [91:91] is the sub-list for method output_type
	91, // [91:91] is the sub-list for method input_type
	91, // [91:91] is the sub-list for extension type_name
	91, // [91:91] is the sub-list for extension extendee
	0,  // [0:91] is the sub-list for field type_name
}

func init() { file_anipj_content_search_search_proto_init() }
func file_anipj_content_search_search_proto_init() {
	if File_anipj_content_search_search_proto != nil {
		return
	}
	file_anipj_content_common_proto_init()
	file_anipj_content_search_search_proto_msgTypes[0].OneofWrappers = []any{
		(*TitleSearchFilter_Condition_)(nil),
		(*TitleSearchFilter_Group_)(nil),
		(*TitleSearchFilter_FulltextSearch)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[2].OneofWrappers = []any{
		(*TitleSearchPaging_Cursor_)(nil),
		(*TitleSearchPaging_Skip_)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[3].OneofWrappers = []any{
		(*BaseSearchFilter_Condition_)(nil),
		(*BaseSearchFilter_Group_)(nil),
		(*BaseSearchFilter_FulltextSearch)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[5].OneofWrappers = []any{
		(*BaseSearchPaging_Cursor_)(nil),
		(*BaseSearchPaging_Skip_)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[6].OneofWrappers = []any{
		(*TagSearchFilter_Condition_)(nil),
		(*TagSearchFilter_Group_)(nil),
		(*TagSearchFilter_FulltextSearch)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[8].OneofWrappers = []any{
		(*TagSearchPaging_Cursor_)(nil),
		(*TagSearchPaging_Skip_)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[10].OneofWrappers = []any{
		(*TitleSearchFilter_Condition_Id_)(nil),
		(*TitleSearchFilter_Condition_IdRepeated_)(nil),
		(*TitleSearchFilter_Condition_FranchiseId_)(nil),
		(*TitleSearchFilter_Condition_FranchiseIdRepeated_)(nil),
		(*TitleSearchFilter_Condition_ProductionStatusRepeated_)(nil),
		(*TitleSearchFilter_Condition_AnimeKindRepeated_)(nil),
		(*TitleSearchFilter_Condition_ReleasedAt_)(nil),
		(*TitleSearchFilter_Condition_AnyTag_)(nil),
		(*TitleSearchFilter_Condition_AnyTagRepeated_)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[21].OneofWrappers = []any{
		(*TitleSearchPaging_Cursor_FromStart_)(nil),
		(*TitleSearchPaging_Cursor_AfterRecord_)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[25].OneofWrappers = []any{
		(*TitleSearchPaging_Cursor_Component_Id)(nil),
		(*TitleSearchPaging_Cursor_Component_FranchiseId)(nil),
		(*TitleSearchPaging_Cursor_Component_ProductionStatus)(nil),
		(*TitleSearchPaging_Cursor_Component_AnimeKind)(nil),
		(*TitleSearchPaging_Cursor_Component_ReleasedAt)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[27].OneofWrappers = []any{
		(*BaseSearchFilter_Condition_Id_)(nil),
		(*BaseSearchFilter_Condition_IdRepeated_)(nil),
		(*BaseSearchFilter_Condition_AnyTag_)(nil),
		(*BaseSearchFilter_Condition_AnyTagRepeated_)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[33].OneofWrappers = []any{
		(*BaseSearchPaging_Cursor_FromStart_)(nil),
		(*BaseSearchPaging_Cursor_AfterRecord_)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[37].OneofWrappers = []any{
		(*BaseSearchPaging_Cursor_Component_Id)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[39].OneofWrappers = []any{
		(*TagSearchFilter_Condition_Id_)(nil),
		(*TagSearchFilter_Condition_IdRepeated_)(nil),
		(*TagSearchFilter_Condition_SystemOnly_)(nil),
		(*TagSearchFilter_Condition_SystemOnlyRepeated_)(nil),
		(*TagSearchFilter_Condition_AnyEntityTypeRepeated_)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[46].OneofWrappers = []any{
		(*TagSearchPaging_Cursor_FromStart_)(nil),
		(*TagSearchPaging_Cursor_AfterRecord_)(nil),
	}
	file_anipj_content_search_search_proto_msgTypes[50].OneofWrappers = []any{
		(*TagSearchPaging_Cursor_Component_Id)(nil),
		(*TagSearchPaging_Cursor_Component_SystemOnly)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anipj_content_search_search_proto_rawDesc), len(file_anipj_content_search_search_proto_rawDesc)),
			NumEnums:      21,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anipj_content_search_search_proto_goTypes,
		DependencyIndexes: file_anipj_content_search_search_proto_depIdxs,
		EnumInfos:         file_anipj_content_search_search_proto_enumTypes,
		MessageInfos:      file_anipj_content_search_search_proto_msgTypes,
	}.Build()
	File_anipj_content_search_search_proto = out.File
	file_anipj_content_search_search_proto_goTypes = nil
	file_anipj_content_search_search_proto_depIdxs = nil
}

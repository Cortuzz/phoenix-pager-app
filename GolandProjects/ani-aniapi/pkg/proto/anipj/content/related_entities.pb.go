// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.1
// source: anipj/content/related_entities.proto

package content

import (
	fieldmask "/anipj/protobuf/fieldmask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateFranchiseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFranchiseRequest) Reset() {
	*x = CreateFranchiseRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFranchiseRequest) ProtoMessage() {}

func (x *CreateFranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFranchiseRequest.ProtoReflect.Descriptor instead.
func (*CreateFranchiseRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{0}
}

func (x *CreateFranchiseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateFranchiseResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Model         *FranchiseModificationModel `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFranchiseResponse) Reset() {
	*x = CreateFranchiseResponse{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFranchiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFranchiseResponse) ProtoMessage() {}

func (x *CreateFranchiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFranchiseResponse.ProtoReflect.Descriptor instead.
func (*CreateFranchiseResponse) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{1}
}

func (x *CreateFranchiseResponse) GetModel() *FranchiseModificationModel {
	if x != nil {
		return x.Model
	}
	return nil
}

type UpdateFranchiseRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Model         *FranchiseModificationModel `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	FieldMask     *fieldmaskpb.FieldMask      `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	MergeOptions  *fieldmask.MergeOptions     `protobuf:"bytes,3,opt,name=merge_options,json=mergeOptions,proto3" json:"merge_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFranchiseRequest) Reset() {
	*x = UpdateFranchiseRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFranchiseRequest) ProtoMessage() {}

func (x *UpdateFranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFranchiseRequest.ProtoReflect.Descriptor instead.
func (*UpdateFranchiseRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateFranchiseRequest) GetModel() *FranchiseModificationModel {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *UpdateFranchiseRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *UpdateFranchiseRequest) GetMergeOptions() *fieldmask.MergeOptions {
	if x != nil {
		return x.MergeOptions
	}
	return nil
}

type GetFranchiseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseRequest) Reset() {
	*x = GetFranchiseRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseRequest) ProtoMessage() {}

func (x *GetFranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseRequest.ProtoReflect.Descriptor instead.
func (*GetFranchiseRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{3}
}

func (x *GetFranchiseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateCharacterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCharacterRequest) Reset() {
	*x = CreateCharacterRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterRequest) ProtoMessage() {}

func (x *CreateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterRequest.ProtoReflect.Descriptor instead.
func (*CreateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCharacterRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateCharacterResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Model         *CharacterModificationModel `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCharacterResponse) Reset() {
	*x = CreateCharacterResponse{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterResponse) ProtoMessage() {}

func (x *CreateCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterResponse.ProtoReflect.Descriptor instead.
func (*CreateCharacterResponse) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCharacterResponse) GetModel() *CharacterModificationModel {
	if x != nil {
		return x.Model
	}
	return nil
}

type UpdateCharacterRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Model         *CharacterModificationModel `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	FieldMask     *fieldmaskpb.FieldMask      `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	MergeOptions  *fieldmask.MergeOptions     `protobuf:"bytes,3,opt,name=merge_options,json=mergeOptions,proto3" json:"merge_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCharacterRequest) Reset() {
	*x = UpdateCharacterRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacterRequest) ProtoMessage() {}

func (x *UpdateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacterRequest.ProtoReflect.Descriptor instead.
func (*UpdateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCharacterRequest) GetModel() *CharacterModificationModel {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *UpdateCharacterRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *UpdateCharacterRequest) GetMergeOptions() *fieldmask.MergeOptions {
	if x != nil {
		return x.MergeOptions
	}
	return nil
}

type GetCharacterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCharacterRequest) Reset() {
	*x = GetCharacterRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterRequest) ProtoMessage() {}

func (x *GetCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterRequest.ProtoReflect.Descriptor instead.
func (*GetCharacterRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{7}
}

func (x *GetCharacterRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreatePersonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePersonRequest) Reset() {
	*x = CreatePersonRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonRequest) ProtoMessage() {}

func (x *CreatePersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonRequest.ProtoReflect.Descriptor instead.
func (*CreatePersonRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{8}
}

func (x *CreatePersonRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreatePersonResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Model         *PersonModificationModel `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePersonResponse) Reset() {
	*x = CreatePersonResponse{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonResponse) ProtoMessage() {}

func (x *CreatePersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonResponse.ProtoReflect.Descriptor instead.
func (*CreatePersonResponse) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{9}
}

func (x *CreatePersonResponse) GetModel() *PersonModificationModel {
	if x != nil {
		return x.Model
	}
	return nil
}

type UpdatePersonRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Model         *PersonModificationModel `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	FieldMask     *fieldmaskpb.FieldMask   `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	MergeOptions  *fieldmask.MergeOptions  `protobuf:"bytes,3,opt,name=merge_options,json=mergeOptions,proto3" json:"merge_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePersonRequest) Reset() {
	*x = UpdatePersonRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePersonRequest) ProtoMessage() {}

func (x *UpdatePersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePersonRequest.ProtoReflect.Descriptor instead.
func (*UpdatePersonRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{10}
}

func (x *UpdatePersonRequest) GetModel() *PersonModificationModel {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *UpdatePersonRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *UpdatePersonRequest) GetMergeOptions() *fieldmask.MergeOptions {
	if x != nil {
		return x.MergeOptions
	}
	return nil
}

type GetPersonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPersonRequest) Reset() {
	*x = GetPersonRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonRequest) ProtoMessage() {}

func (x *GetPersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonRequest.ProtoReflect.Descriptor instead.
func (*GetPersonRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{11}
}

func (x *GetPersonRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateStudioRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStudioRequest) Reset() {
	*x = CreateStudioRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudioRequest) ProtoMessage() {}

func (x *CreateStudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudioRequest.ProtoReflect.Descriptor instead.
func (*CreateStudioRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{12}
}

func (x *CreateStudioRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateStudioResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Model         *StudioModificationModel `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStudioResponse) Reset() {
	*x = CreateStudioResponse{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudioResponse) ProtoMessage() {}

func (x *CreateStudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudioResponse.ProtoReflect.Descriptor instead.
func (*CreateStudioResponse) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{13}
}

func (x *CreateStudioResponse) GetModel() *StudioModificationModel {
	if x != nil {
		return x.Model
	}
	return nil
}

type UpdateStudioRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Model         *StudioModificationModel `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	FieldMask     *fieldmaskpb.FieldMask   `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	MergeOptions  *fieldmask.MergeOptions  `protobuf:"bytes,3,opt,name=merge_options,json=mergeOptions,proto3" json:"merge_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStudioRequest) Reset() {
	*x = UpdateStudioRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudioRequest) ProtoMessage() {}

func (x *UpdateStudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudioRequest.ProtoReflect.Descriptor instead.
func (*UpdateStudioRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateStudioRequest) GetModel() *StudioModificationModel {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *UpdateStudioRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *UpdateStudioRequest) GetMergeOptions() *fieldmask.MergeOptions {
	if x != nil {
		return x.MergeOptions
	}
	return nil
}

type GetStudioRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudioRequest) Reset() {
	*x = GetStudioRequest{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudioRequest) ProtoMessage() {}

func (x *GetStudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudioRequest.ProtoReflect.Descriptor instead.
func (*GetStudioRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{15}
}

func (x *GetStudioRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FranchiseModificationModel struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Names                 []*NameVariant         `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Description           *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	CrossoverFranchiseIds []int32                `protobuf:"varint,4,rep,packed,name=crossover_franchise_ids,json=crossoverFranchiseIds,proto3" json:"crossover_franchise_ids,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *FranchiseModificationModel) Reset() {
	*x = FranchiseModificationModel{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FranchiseModificationModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseModificationModel) ProtoMessage() {}

func (x *FranchiseModificationModel) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseModificationModel.ProtoReflect.Descriptor instead.
func (*FranchiseModificationModel) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{16}
}

func (x *FranchiseModificationModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FranchiseModificationModel) GetNames() []*NameVariant {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *FranchiseModificationModel) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *FranchiseModificationModel) GetCrossoverFranchiseIds() []int32 {
	if x != nil {
		return x.CrossoverFranchiseIds
	}
	return nil
}

type CharacterModificationModel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Names         []*NameVariant         `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Description   *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterModificationModel) Reset() {
	*x = CharacterModificationModel{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterModificationModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterModificationModel) ProtoMessage() {}

func (x *CharacterModificationModel) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterModificationModel.ProtoReflect.Descriptor instead.
func (*CharacterModificationModel) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{17}
}

func (x *CharacterModificationModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CharacterModificationModel) GetNames() []*NameVariant {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *CharacterModificationModel) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type PersonModificationModel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Names         []*NameVariant         `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Description   *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PersonModificationModel) Reset() {
	*x = PersonModificationModel{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PersonModificationModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonModificationModel) ProtoMessage() {}

func (x *PersonModificationModel) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonModificationModel.ProtoReflect.Descriptor instead.
func (*PersonModificationModel) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{18}
}

func (x *PersonModificationModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PersonModificationModel) GetNames() []*NameVariant {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *PersonModificationModel) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type StudioModificationModel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Names         []*NameVariant         `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Description   *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StudioModificationModel) Reset() {
	*x = StudioModificationModel{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudioModificationModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudioModificationModel) ProtoMessage() {}

func (x *StudioModificationModel) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudioModificationModel.ProtoReflect.Descriptor instead.
func (*StudioModificationModel) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{19}
}

func (x *StudioModificationModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StudioModificationModel) GetNames() []*NameVariant {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *StudioModificationModel) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type Franchise struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Names                 []*NameVariant         `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Description           *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	PrimaryPictureId      *int32                 `protobuf:"varint,4,opt,name=primary_picture_id,json=primaryPictureId,proto3,oneof" json:"primary_picture_id,omitempty"`
	Pictures              []*Picture             `protobuf:"bytes,5,rep,name=pictures,proto3" json:"pictures,omitempty"`
	Tags                  []*TagOnEntity         `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	CrossoverFranchiseIds []int32                `protobuf:"varint,7,rep,packed,name=crossover_franchise_ids,json=crossoverFranchiseIds,proto3" json:"crossover_franchise_ids,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Franchise) Reset() {
	*x = Franchise{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Franchise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Franchise) ProtoMessage() {}

func (x *Franchise) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Franchise.ProtoReflect.Descriptor instead.
func (*Franchise) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{20}
}

func (x *Franchise) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Franchise) GetNames() []*NameVariant {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Franchise) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Franchise) GetPrimaryPictureId() int32 {
	if x != nil && x.PrimaryPictureId != nil {
		return *x.PrimaryPictureId
	}
	return 0
}

func (x *Franchise) GetPictures() []*Picture {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *Franchise) GetTags() []*TagOnEntity {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Franchise) GetCrossoverFranchiseIds() []int32 {
	if x != nil {
		return x.CrossoverFranchiseIds
	}
	return nil
}

type Character struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Names            []*NameVariant         `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Description      *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	PrimaryPictureId *int32                 `protobuf:"varint,4,opt,name=primary_picture_id,json=primaryPictureId,proto3,oneof" json:"primary_picture_id,omitempty"`
	Pictures         []*Picture             `protobuf:"bytes,5,rep,name=pictures,proto3" json:"pictures,omitempty"`
	Tags             []*TagOnEntity         `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Character) Reset() {
	*x = Character{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{21}
}

func (x *Character) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Character) GetNames() []*NameVariant {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Character) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Character) GetPrimaryPictureId() int32 {
	if x != nil && x.PrimaryPictureId != nil {
		return *x.PrimaryPictureId
	}
	return 0
}

func (x *Character) GetPictures() []*Picture {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *Character) GetTags() []*TagOnEntity {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Person struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Names            []*NameVariant         `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Description      *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	PrimaryPictureId *int32                 `protobuf:"varint,4,opt,name=primary_picture_id,json=primaryPictureId,proto3,oneof" json:"primary_picture_id,omitempty"`
	Pictures         []*Picture             `protobuf:"bytes,5,rep,name=pictures,proto3" json:"pictures,omitempty"`
	Tags             []*TagOnEntity         `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{22}
}

func (x *Person) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Person) GetNames() []*NameVariant {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Person) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Person) GetPrimaryPictureId() int32 {
	if x != nil && x.PrimaryPictureId != nil {
		return *x.PrimaryPictureId
	}
	return 0
}

func (x *Person) GetPictures() []*Picture {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *Person) GetTags() []*TagOnEntity {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Studio struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Names            []*NameVariant         `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Description      *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	PrimaryPictureId *int32                 `protobuf:"varint,4,opt,name=primary_picture_id,json=primaryPictureId,proto3,oneof" json:"primary_picture_id,omitempty"`
	Pictures         []*Picture             `protobuf:"bytes,5,rep,name=pictures,proto3" json:"pictures,omitempty"`
	Tags             []*TagOnEntity         `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Studio) Reset() {
	*x = Studio{}
	mi := &file_anipj_content_related_entities_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Studio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Studio) ProtoMessage() {}

func (x *Studio) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_related_entities_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Studio.ProtoReflect.Descriptor instead.
func (*Studio) Descriptor() ([]byte, []int) {
	return file_anipj_content_related_entities_proto_rawDescGZIP(), []int{23}
}

func (x *Studio) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Studio) GetNames() []*NameVariant {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Studio) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Studio) GetPrimaryPictureId() int32 {
	if x != nil && x.PrimaryPictureId != nil {
		return *x.PrimaryPictureId
	}
	return 0
}

func (x *Studio) GetPictures() []*Picture {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *Studio) GetTags() []*TagOnEntity {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_anipj_content_related_entities_proto protoreflect.FileDescriptor

var file_anipj_content_related_entities_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x1a, 0x1a, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xe8, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x12, 0x4c, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x69, 0x70,
	0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x60, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x22, 0xe8, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x4c, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x25,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xe2, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x42, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12,
	0x4c, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x22, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0xe2, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x4c, 0x0a, 0x0d, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd3, 0x01,
	0x0a, 0x1a, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x17, 0x63,
	0x72, 0x6f, 0x73, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x49, 0x64, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x98, 0x01, 0x0a, 0x17, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a,
	0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x01, 0x0a,
	0x17, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfc, 0x02, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x01, 0x52, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x69, 0x70,
	0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x6f,
	0x76, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x73, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xc4, 0x02, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x34, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xc1, 0x02,
	0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67, 0x4f, 0x6e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x22, 0xc1, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x38,
	0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x54, 0x61, 0x67,
	0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x15,
	0x0a, 0x13, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x32, 0xc6, 0x01, 0x0a, 0x10, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x6e, 0x69, 0x70,
	0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xc6,
	0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xba, 0x01, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x64, 0x65, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0xba, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x29, 0x5a, 0x0d, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0xaa, 0x02, 0x17, 0x41, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_anipj_content_related_entities_proto_rawDescOnce sync.Once
	file_anipj_content_related_entities_proto_rawDescData []byte
)

func file_anipj_content_related_entities_proto_rawDescGZIP() []byte {
	file_anipj_content_related_entities_proto_rawDescOnce.Do(func() {
		file_anipj_content_related_entities_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anipj_content_related_entities_proto_rawDesc), len(file_anipj_content_related_entities_proto_rawDesc)))
	})
	return file_anipj_content_related_entities_proto_rawDescData
}

var file_anipj_content_related_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_anipj_content_related_entities_proto_goTypes = []any{
	(*CreateFranchiseRequest)(nil),     // 0: anipj.content.v1dev.CreateFranchiseRequest
	(*CreateFranchiseResponse)(nil),    // 1: anipj.content.v1dev.CreateFranchiseResponse
	(*UpdateFranchiseRequest)(nil),     // 2: anipj.content.v1dev.UpdateFranchiseRequest
	(*GetFranchiseRequest)(nil),        // 3: anipj.content.v1dev.GetFranchiseRequest
	(*CreateCharacterRequest)(nil),     // 4: anipj.content.v1dev.CreateCharacterRequest
	(*CreateCharacterResponse)(nil),    // 5: anipj.content.v1dev.CreateCharacterResponse
	(*UpdateCharacterRequest)(nil),     // 6: anipj.content.v1dev.UpdateCharacterRequest
	(*GetCharacterRequest)(nil),        // 7: anipj.content.v1dev.GetCharacterRequest
	(*CreatePersonRequest)(nil),        // 8: anipj.content.v1dev.CreatePersonRequest
	(*CreatePersonResponse)(nil),       // 9: anipj.content.v1dev.CreatePersonResponse
	(*UpdatePersonRequest)(nil),        // 10: anipj.content.v1dev.UpdatePersonRequest
	(*GetPersonRequest)(nil),           // 11: anipj.content.v1dev.GetPersonRequest
	(*CreateStudioRequest)(nil),        // 12: anipj.content.v1dev.CreateStudioRequest
	(*CreateStudioResponse)(nil),       // 13: anipj.content.v1dev.CreateStudioResponse
	(*UpdateStudioRequest)(nil),        // 14: anipj.content.v1dev.UpdateStudioRequest
	(*GetStudioRequest)(nil),           // 15: anipj.content.v1dev.GetStudioRequest
	(*FranchiseModificationModel)(nil), // 16: anipj.content.v1dev.FranchiseModificationModel
	(*CharacterModificationModel)(nil), // 17: anipj.content.v1dev.CharacterModificationModel
	(*PersonModificationModel)(nil),    // 18: anipj.content.v1dev.PersonModificationModel
	(*StudioModificationModel)(nil),    // 19: anipj.content.v1dev.StudioModificationModel
	(*Franchise)(nil),                  // 20: anipj.content.v1dev.Franchise
	(*Character)(nil),                  // 21: anipj.content.v1dev.Character
	(*Person)(nil),                     // 22: anipj.content.v1dev.Person
	(*Studio)(nil),                     // 23: anipj.content.v1dev.Studio
	(*fieldmaskpb.FieldMask)(nil),      // 24: google.protobuf.FieldMask
	(*fieldmask.MergeOptions)(nil),     // 25: anipj.protobuf.field_mask.MergeOptions
	(*NameVariant)(nil),                // 26: anipj.content.v1dev.NameVariant
	(*Picture)(nil),                    // 27: anipj.content.v1dev.Picture
	(*TagOnEntity)(nil),                // 28: anipj.content.v1dev.TagOnEntity
	(*emptypb.Empty)(nil),              // 29: google.protobuf.Empty
}
var file_anipj_content_related_entities_proto_depIdxs = []int32{
	16, // 0: anipj.content.v1dev.CreateFranchiseResponse.model:type_name -> anipj.content.v1dev.FranchiseModificationModel
	16, // 1: anipj.content.v1dev.UpdateFranchiseRequest.model:type_name -> anipj.content.v1dev.FranchiseModificationModel
	24, // 2: anipj.content.v1dev.UpdateFranchiseRequest.field_mask:type_name -> google.protobuf.FieldMask
	25, // 3: anipj.content.v1dev.UpdateFranchiseRequest.merge_options:type_name -> anipj.protobuf.field_mask.MergeOptions
	17, // 4: anipj.content.v1dev.CreateCharacterResponse.model:type_name -> anipj.content.v1dev.CharacterModificationModel
	17, // 5: anipj.content.v1dev.UpdateCharacterRequest.model:type_name -> anipj.content.v1dev.CharacterModificationModel
	24, // 6: anipj.content.v1dev.UpdateCharacterRequest.field_mask:type_name -> google.protobuf.FieldMask
	25, // 7: anipj.content.v1dev.UpdateCharacterRequest.merge_options:type_name -> anipj.protobuf.field_mask.MergeOptions
	18, // 8: anipj.content.v1dev.CreatePersonResponse.model:type_name -> anipj.content.v1dev.PersonModificationModel
	18, // 9: anipj.content.v1dev.UpdatePersonRequest.model:type_name -> anipj.content.v1dev.PersonModificationModel
	24, // 10: anipj.content.v1dev.UpdatePersonRequest.field_mask:type_name -> google.protobuf.FieldMask
	25, // 11: anipj.content.v1dev.UpdatePersonRequest.merge_options:type_name -> anipj.protobuf.field_mask.MergeOptions
	19, // 12: anipj.content.v1dev.CreateStudioResponse.model:type_name -> anipj.content.v1dev.StudioModificationModel
	19, // 13: anipj.content.v1dev.UpdateStudioRequest.model:type_name -> anipj.content.v1dev.StudioModificationModel
	24, // 14: anipj.content.v1dev.UpdateStudioRequest.field_mask:type_name -> google.protobuf.FieldMask
	25, // 15: anipj.content.v1dev.UpdateStudioRequest.merge_options:type_name -> anipj.protobuf.field_mask.MergeOptions
	26, // 16: anipj.content.v1dev.FranchiseModificationModel.names:type_name -> anipj.content.v1dev.NameVariant
	26, // 17: anipj.content.v1dev.CharacterModificationModel.names:type_name -> anipj.content.v1dev.NameVariant
	26, // 18: anipj.content.v1dev.PersonModificationModel.names:type_name -> anipj.content.v1dev.NameVariant
	26, // 19: anipj.content.v1dev.StudioModificationModel.names:type_name -> anipj.content.v1dev.NameVariant
	26, // 20: anipj.content.v1dev.Franchise.names:type_name -> anipj.content.v1dev.NameVariant
	27, // 21: anipj.content.v1dev.Franchise.pictures:type_name -> anipj.content.v1dev.Picture
	28, // 22: anipj.content.v1dev.Franchise.tags:type_name -> anipj.content.v1dev.TagOnEntity
	26, // 23: anipj.content.v1dev.Character.names:type_name -> anipj.content.v1dev.NameVariant
	27, // 24: anipj.content.v1dev.Character.pictures:type_name -> anipj.content.v1dev.Picture
	28, // 25: anipj.content.v1dev.Character.tags:type_name -> anipj.content.v1dev.TagOnEntity
	26, // 26: anipj.content.v1dev.Person.names:type_name -> anipj.content.v1dev.NameVariant
	27, // 27: anipj.content.v1dev.Person.pictures:type_name -> anipj.content.v1dev.Picture
	28, // 28: anipj.content.v1dev.Person.tags:type_name -> anipj.content.v1dev.TagOnEntity
	26, // 29: anipj.content.v1dev.Studio.names:type_name -> anipj.content.v1dev.NameVariant
	27, // 30: anipj.content.v1dev.Studio.pictures:type_name -> anipj.content.v1dev.Picture
	28, // 31: anipj.content.v1dev.Studio.tags:type_name -> anipj.content.v1dev.TagOnEntity
	0,  // 32: anipj.content.v1dev.FranchiseService.Create:input_type -> anipj.content.v1dev.CreateFranchiseRequest
	2,  // 33: anipj.content.v1dev.FranchiseService.Update:input_type -> anipj.content.v1dev.UpdateFranchiseRequest
	4,  // 34: anipj.content.v1dev.CharacterService.Create:input_type -> anipj.content.v1dev.CreateCharacterRequest
	6,  // 35: anipj.content.v1dev.CharacterService.Update:input_type -> anipj.content.v1dev.UpdateCharacterRequest
	8,  // 36: anipj.content.v1dev.PersonService.Create:input_type -> anipj.content.v1dev.CreatePersonRequest
	10, // 37: anipj.content.v1dev.PersonService.Update:input_type -> anipj.content.v1dev.UpdatePersonRequest
	12, // 38: anipj.content.v1dev.StudioService.Create:input_type -> anipj.content.v1dev.CreateStudioRequest
	14, // 39: anipj.content.v1dev.StudioService.Update:input_type -> anipj.content.v1dev.UpdateStudioRequest
	1,  // 40: anipj.content.v1dev.FranchiseService.Create:output_type -> anipj.content.v1dev.CreateFranchiseResponse
	29, // 41: anipj.content.v1dev.FranchiseService.Update:output_type -> google.protobuf.Empty
	5,  // 42: anipj.content.v1dev.CharacterService.Create:output_type -> anipj.content.v1dev.CreateCharacterResponse
	29, // 43: anipj.content.v1dev.CharacterService.Update:output_type -> google.protobuf.Empty
	9,  // 44: anipj.content.v1dev.PersonService.Create:output_type -> anipj.content.v1dev.CreatePersonResponse
	29, // 45: anipj.content.v1dev.PersonService.Update:output_type -> google.protobuf.Empty
	13, // 46: anipj.content.v1dev.StudioService.Create:output_type -> anipj.content.v1dev.CreateStudioResponse
	29, // 47: anipj.content.v1dev.StudioService.Update:output_type -> google.protobuf.Empty
	40, // [40:48] is the sub-list for method output_type
	32, // [32:40] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_anipj_content_related_entities_proto_init() }
func file_anipj_content_related_entities_proto_init() {
	if File_anipj_content_related_entities_proto != nil {
		return
	}
	file_anipj_content_common_proto_init()
	file_anipj_content_picture_proto_init()
	file_anipj_content_tags_proto_init()
	file_anipj_content_related_entities_proto_msgTypes[16].OneofWrappers = []any{}
	file_anipj_content_related_entities_proto_msgTypes[17].OneofWrappers = []any{}
	file_anipj_content_related_entities_proto_msgTypes[18].OneofWrappers = []any{}
	file_anipj_content_related_entities_proto_msgTypes[19].OneofWrappers = []any{}
	file_anipj_content_related_entities_proto_msgTypes[20].OneofWrappers = []any{}
	file_anipj_content_related_entities_proto_msgTypes[21].OneofWrappers = []any{}
	file_anipj_content_related_entities_proto_msgTypes[22].OneofWrappers = []any{}
	file_anipj_content_related_entities_proto_msgTypes[23].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anipj_content_related_entities_proto_rawDesc), len(file_anipj_content_related_entities_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_anipj_content_related_entities_proto_goTypes,
		DependencyIndexes: file_anipj_content_related_entities_proto_depIdxs,
		MessageInfos:      file_anipj_content_related_entities_proto_msgTypes,
	}.Build()
	File_anipj_content_related_entities_proto = out.File
	file_anipj_content_related_entities_proto_goTypes = nil
	file_anipj_content_related_entities_proto_depIdxs = nil
}

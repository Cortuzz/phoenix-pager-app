// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.1
// source: anipj/content/picture.proto

package content

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Picture_Type int32

const (
	Picture_UNSPECIFIED Picture_Type = 0 // invalid
	Picture_POSTER      Picture_Type = 1
	Picture_SCREENSHOT  Picture_Type = 2
	Picture_PHOTO       Picture_Type = 3
)

// Enum value maps for Picture_Type.
var (
	Picture_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "POSTER",
		2: "SCREENSHOT",
		3: "PHOTO",
	}
	Picture_Type_value = map[string]int32{
		"UNSPECIFIED": 0,
		"POSTER":      1,
		"SCREENSHOT":  2,
		"PHOTO":       3,
	}
)

func (x Picture_Type) Enum() *Picture_Type {
	p := new(Picture_Type)
	*p = x
	return p
}

func (x Picture_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Picture_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_picture_proto_enumTypes[0].Descriptor()
}

func (Picture_Type) Type() protoreflect.EnumType {
	return &file_anipj_content_picture_proto_enumTypes[0]
}

func (x Picture_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Picture_Type.Descriptor instead.
func (Picture_Type) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{6, 0}
}

type CreatePictureRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	EntityLink *EntityLink            `protobuf:"bytes,1,opt,name=entity_link,json=entityLink,proto3" json:"entity_link,omitempty"`
	Type       Picture_Type           `protobuf:"varint,2,opt,name=type,proto3,enum=anipj.content.v1dev.Picture_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to ImageSource:
	//
	//	*CreatePictureRequest_ObjectId
	//	*CreatePictureRequest_ExternalUrl
	ImageSource          isCreatePictureRequest_ImageSource `protobuf_oneof:"ImageSource"`
	SecondaryResolutions []*CreatePictureRequest_Resolution `protobuf:"bytes,5,rep,name=secondary_resolutions,json=secondaryResolutions,proto3" json:"secondary_resolutions,omitempty"` // разрешения изображения, которые нужно подготовить, кроме изначального изображения
	OrderNumber          *int32                             `protobuf:"varint,6,opt,name=order_number,json=orderNumber,proto3,oneof" json:"order_number,omitempty"`                     // фактор сортировки в рамках сущности контента
	Name                 *string                            `protobuf:"bytes,7,opt,name=name,proto3,oneof" json:"name,omitempty"`                                                       // имя, по большей части Debug поле
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreatePictureRequest) Reset() {
	*x = CreatePictureRequest{}
	mi := &file_anipj_content_picture_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePictureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePictureRequest) ProtoMessage() {}

func (x *CreatePictureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_picture_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePictureRequest.ProtoReflect.Descriptor instead.
func (*CreatePictureRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePictureRequest) GetEntityLink() *EntityLink {
	if x != nil {
		return x.EntityLink
	}
	return nil
}

func (x *CreatePictureRequest) GetType() Picture_Type {
	if x != nil {
		return x.Type
	}
	return Picture_UNSPECIFIED
}

func (x *CreatePictureRequest) GetImageSource() isCreatePictureRequest_ImageSource {
	if x != nil {
		return x.ImageSource
	}
	return nil
}

func (x *CreatePictureRequest) GetObjectId() string {
	if x != nil {
		if x, ok := x.ImageSource.(*CreatePictureRequest_ObjectId); ok {
			return x.ObjectId
		}
	}
	return ""
}

func (x *CreatePictureRequest) GetExternalUrl() string {
	if x != nil {
		if x, ok := x.ImageSource.(*CreatePictureRequest_ExternalUrl); ok {
			return x.ExternalUrl
		}
	}
	return ""
}

func (x *CreatePictureRequest) GetSecondaryResolutions() []*CreatePictureRequest_Resolution {
	if x != nil {
		return x.SecondaryResolutions
	}
	return nil
}

func (x *CreatePictureRequest) GetOrderNumber() int32 {
	if x != nil && x.OrderNumber != nil {
		return *x.OrderNumber
	}
	return 0
}

func (x *CreatePictureRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type isCreatePictureRequest_ImageSource interface {
	isCreatePictureRequest_ImageSource()
}

type CreatePictureRequest_ObjectId struct {
	ObjectId string `protobuf:"bytes,3,opt,name=object_id,json=objectId,proto3,oneof"` // объект в хранилище, который использовать как источник
}

type CreatePictureRequest_ExternalUrl struct {
	ExternalUrl string `protobuf:"bytes,4,opt,name=external_url,json=externalUrl,proto3,oneof"` // адрес, с которого нужно скачать изображение
}

func (*CreatePictureRequest_ObjectId) isCreatePictureRequest_ImageSource() {}

func (*CreatePictureRequest_ExternalUrl) isCreatePictureRequest_ImageSource() {}

type CreatePictureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PictureId     int32                  `protobuf:"varint,1,opt,name=picture_id,json=pictureId,proto3" json:"picture_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePictureResponse) Reset() {
	*x = CreatePictureResponse{}
	mi := &file_anipj_content_picture_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePictureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePictureResponse) ProtoMessage() {}

func (x *CreatePictureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_picture_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePictureResponse.ProtoReflect.Descriptor instead.
func (*CreatePictureResponse) Descriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePictureResponse) GetPictureId() int32 {
	if x != nil {
		return x.PictureId
	}
	return 0
}

type UpdatePictureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderNumber   *int32                 `protobuf:"varint,5,opt,name=order_number,json=orderNumber,proto3,oneof" json:"order_number,omitempty"`
	Name          *string                `protobuf:"bytes,6,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePictureRequest) Reset() {
	*x = UpdatePictureRequest{}
	mi := &file_anipj_content_picture_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePictureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePictureRequest) ProtoMessage() {}

func (x *UpdatePictureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_picture_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePictureRequest.ProtoReflect.Descriptor instead.
func (*UpdatePictureRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePictureRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePictureRequest) GetOrderNumber() int32 {
	if x != nil && x.OrderNumber != nil {
		return *x.OrderNumber
	}
	return 0
}

func (x *UpdatePictureRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type DeletePictureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePictureRequest) Reset() {
	*x = DeletePictureRequest{}
	mi := &file_anipj_content_picture_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePictureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePictureRequest) ProtoMessage() {}

func (x *DeletePictureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_picture_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePictureRequest.ProtoReflect.Descriptor instead.
func (*DeletePictureRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{3}
}

func (x *DeletePictureRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetEntityPicturesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityLink    *EntityLink            `protobuf:"bytes,1,opt,name=entity_link,json=entityLink,proto3" json:"entity_link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEntityPicturesRequest) Reset() {
	*x = GetEntityPicturesRequest{}
	mi := &file_anipj_content_picture_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEntityPicturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityPicturesRequest) ProtoMessage() {}

func (x *GetEntityPicturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_picture_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityPicturesRequest.ProtoReflect.Descriptor instead.
func (*GetEntityPicturesRequest) Descriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{4}
}

func (x *GetEntityPicturesRequest) GetEntityLink() *EntityLink {
	if x != nil {
		return x.EntityLink
	}
	return nil
}

type PictureOnEntity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Picture       *Picture               `protobuf:"bytes,1,opt,name=picture,proto3" json:"picture,omitempty"`
	EntityLink    *EntityLink            `protobuf:"bytes,3,opt,name=entity_link,json=entityLink,proto3" json:"entity_link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PictureOnEntity) Reset() {
	*x = PictureOnEntity{}
	mi := &file_anipj_content_picture_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PictureOnEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureOnEntity) ProtoMessage() {}

func (x *PictureOnEntity) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_picture_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureOnEntity.ProtoReflect.Descriptor instead.
func (*PictureOnEntity) Descriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{5}
}

func (x *PictureOnEntity) GetPicture() *Picture {
	if x != nil {
		return x.Picture
	}
	return nil
}

func (x *PictureOnEntity) GetEntityLink() *EntityLink {
	if x != nil {
		return x.EntityLink
	}
	return nil
}

type Picture struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          Picture_Type           `protobuf:"varint,2,opt,name=type,proto3,enum=anipj.content.v1dev.Picture_Type" json:"type,omitempty"`
	Images        []*Picture_Image       `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	OrderNumber   *int32                 `protobuf:"varint,4,opt,name=order_number,json=orderNumber,proto3,oneof" json:"order_number,omitempty"` // фактор сортировки в рамках сущности контента
	Name          *string                `protobuf:"bytes,5,opt,name=name,proto3,oneof" json:"name,omitempty"`                                   // имя, по большей части Debug поле
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Picture) Reset() {
	*x = Picture{}
	mi := &file_anipj_content_picture_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Picture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Picture) ProtoMessage() {}

func (x *Picture) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_picture_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Picture.ProtoReflect.Descriptor instead.
func (*Picture) Descriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{6}
}

func (x *Picture) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Picture) GetType() Picture_Type {
	if x != nil {
		return x.Type
	}
	return Picture_UNSPECIFIED
}

func (x *Picture) GetImages() []*Picture_Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Picture) GetOrderNumber() int32 {
	if x != nil && x.OrderNumber != nil {
		return *x.OrderNumber
	}
	return 0
}

func (x *Picture) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreatePictureRequest_Resolution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         uint32                 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePictureRequest_Resolution) Reset() {
	*x = CreatePictureRequest_Resolution{}
	mi := &file_anipj_content_picture_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePictureRequest_Resolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePictureRequest_Resolution) ProtoMessage() {}

func (x *CreatePictureRequest_Resolution) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_picture_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePictureRequest_Resolution.ProtoReflect.Descriptor instead.
func (*CreatePictureRequest_Resolution) Descriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CreatePictureRequest_Resolution) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CreatePictureRequest_Resolution) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Picture_Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Format        *string                `protobuf:"bytes,2,opt,name=format,proto3,oneof" json:"format,omitempty"`
	Height        *uint32                `protobuf:"varint,3,opt,name=height,proto3,oneof" json:"height,omitempty"`
	Width         *uint32                `protobuf:"varint,4,opt,name=width,proto3,oneof" json:"width,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Picture_Image) Reset() {
	*x = Picture_Image{}
	mi := &file_anipj_content_picture_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Picture_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Picture_Image) ProtoMessage() {}

func (x *Picture_Image) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_picture_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Picture_Image.ProtoReflect.Descriptor instead.
func (*Picture_Image) Descriptor() ([]byte, []int) {
	return file_anipj_content_picture_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Picture_Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Picture_Image) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *Picture_Image) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Picture_Image) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

var File_anipj_content_picture_proto protoreflect.FileDescriptor

var file_anipj_content_picture_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x1a, 0x1a, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x03, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6e, 0x69, 0x70,
	0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x72,
	0x6c, 0x12, 0x69, 0x0a, 0x15, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x3a, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x26,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x69, 0x70,
	0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x40, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x22, 0xb8, 0x03, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61,
	0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64,
	0x65, 0x76, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x1a, 0x8e, 0x01, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x22, 0x3e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x4f, 0x53, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x43, 0x52, 0x45,
	0x45, 0x4e, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x48, 0x4f, 0x54,
	0x4f, 0x10, 0x03, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xf3, 0x02,
	0x0a, 0x0e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x66, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x2e, 0x61, 0x6e, 0x69,
	0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x6e, 0x69, 0x70,
	0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x29, 0x5a, 0x0d, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0xaa, 0x02, 0x17, 0x41, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_anipj_content_picture_proto_rawDescOnce sync.Once
	file_anipj_content_picture_proto_rawDescData []byte
)

func file_anipj_content_picture_proto_rawDescGZIP() []byte {
	file_anipj_content_picture_proto_rawDescOnce.Do(func() {
		file_anipj_content_picture_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anipj_content_picture_proto_rawDesc), len(file_anipj_content_picture_proto_rawDesc)))
	})
	return file_anipj_content_picture_proto_rawDescData
}

var file_anipj_content_picture_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_anipj_content_picture_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_anipj_content_picture_proto_goTypes = []any{
	(Picture_Type)(0),                       // 0: anipj.content.v1dev.Picture.Type
	(*CreatePictureRequest)(nil),            // 1: anipj.content.v1dev.CreatePictureRequest
	(*CreatePictureResponse)(nil),           // 2: anipj.content.v1dev.CreatePictureResponse
	(*UpdatePictureRequest)(nil),            // 3: anipj.content.v1dev.UpdatePictureRequest
	(*DeletePictureRequest)(nil),            // 4: anipj.content.v1dev.DeletePictureRequest
	(*GetEntityPicturesRequest)(nil),        // 5: anipj.content.v1dev.GetEntityPicturesRequest
	(*PictureOnEntity)(nil),                 // 6: anipj.content.v1dev.PictureOnEntity
	(*Picture)(nil),                         // 7: anipj.content.v1dev.Picture
	(*CreatePictureRequest_Resolution)(nil), // 8: anipj.content.v1dev.CreatePictureRequest.Resolution
	(*Picture_Image)(nil),                   // 9: anipj.content.v1dev.Picture.Image
	(*EntityLink)(nil),                      // 10: anipj.content.v1dev.EntityLink
	(*emptypb.Empty)(nil),                   // 11: google.protobuf.Empty
}
var file_anipj_content_picture_proto_depIdxs = []int32{
	10, // 0: anipj.content.v1dev.CreatePictureRequest.entity_link:type_name -> anipj.content.v1dev.EntityLink
	0,  // 1: anipj.content.v1dev.CreatePictureRequest.type:type_name -> anipj.content.v1dev.Picture.Type
	8,  // 2: anipj.content.v1dev.CreatePictureRequest.secondary_resolutions:type_name -> anipj.content.v1dev.CreatePictureRequest.Resolution
	10, // 3: anipj.content.v1dev.GetEntityPicturesRequest.entity_link:type_name -> anipj.content.v1dev.EntityLink
	7,  // 4: anipj.content.v1dev.PictureOnEntity.picture:type_name -> anipj.content.v1dev.Picture
	10, // 5: anipj.content.v1dev.PictureOnEntity.entity_link:type_name -> anipj.content.v1dev.EntityLink
	0,  // 6: anipj.content.v1dev.Picture.type:type_name -> anipj.content.v1dev.Picture.Type
	9,  // 7: anipj.content.v1dev.Picture.images:type_name -> anipj.content.v1dev.Picture.Image
	1,  // 8: anipj.content.v1dev.PictureService.Create:input_type -> anipj.content.v1dev.CreatePictureRequest
	3,  // 9: anipj.content.v1dev.PictureService.Update:input_type -> anipj.content.v1dev.UpdatePictureRequest
	4,  // 10: anipj.content.v1dev.PictureService.Delete:input_type -> anipj.content.v1dev.DeletePictureRequest
	5,  // 11: anipj.content.v1dev.PictureService.GetByEntity:input_type -> anipj.content.v1dev.GetEntityPicturesRequest
	2,  // 12: anipj.content.v1dev.PictureService.Create:output_type -> anipj.content.v1dev.CreatePictureResponse
	11, // 13: anipj.content.v1dev.PictureService.Update:output_type -> google.protobuf.Empty
	11, // 14: anipj.content.v1dev.PictureService.Delete:output_type -> google.protobuf.Empty
	6,  // 15: anipj.content.v1dev.PictureService.GetByEntity:output_type -> anipj.content.v1dev.PictureOnEntity
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_anipj_content_picture_proto_init() }
func file_anipj_content_picture_proto_init() {
	if File_anipj_content_picture_proto != nil {
		return
	}
	file_anipj_content_common_proto_init()
	file_anipj_content_picture_proto_msgTypes[0].OneofWrappers = []any{
		(*CreatePictureRequest_ObjectId)(nil),
		(*CreatePictureRequest_ExternalUrl)(nil),
	}
	file_anipj_content_picture_proto_msgTypes[2].OneofWrappers = []any{}
	file_anipj_content_picture_proto_msgTypes[6].OneofWrappers = []any{}
	file_anipj_content_picture_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anipj_content_picture_proto_rawDesc), len(file_anipj_content_picture_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_anipj_content_picture_proto_goTypes,
		DependencyIndexes: file_anipj_content_picture_proto_depIdxs,
		EnumInfos:         file_anipj_content_picture_proto_enumTypes,
		MessageInfos:      file_anipj_content_picture_proto_msgTypes,
	}.Build()
	File_anipj_content_picture_proto = out.File
	file_anipj_content_picture_proto_goTypes = nil
	file_anipj_content_picture_proto_depIdxs = nil
}

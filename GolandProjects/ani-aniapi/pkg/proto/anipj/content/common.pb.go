// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.1
// source: anipj/content/common.proto

package content

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TitleType int32

const (
	TitleType_TITLE_TYPE_UNSPECIFIED TitleType = 0
	TitleType_TITLE_TYPE_ANIME       TitleType = 1
	TitleType_TITLE_TYPE_MANGA       TitleType = 2
)

// Enum value maps for TitleType.
var (
	TitleType_name = map[int32]string{
		0: "TITLE_TYPE_UNSPECIFIED",
		1: "TITLE_TYPE_ANIME",
		2: "TITLE_TYPE_MANGA",
	}
	TitleType_value = map[string]int32{
		"TITLE_TYPE_UNSPECIFIED": 0,
		"TITLE_TYPE_ANIME":       1,
		"TITLE_TYPE_MANGA":       2,
	}
)

func (x TitleType) Enum() *TitleType {
	p := new(TitleType)
	*p = x
	return p
}

func (x TitleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleType) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_common_proto_enumTypes[0].Descriptor()
}

func (TitleType) Type() protoreflect.EnumType {
	return &file_anipj_content_common_proto_enumTypes[0]
}

func (x TitleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleType.Descriptor instead.
func (TitleType) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_common_proto_rawDescGZIP(), []int{0}
}

type AnimeKind int32

const (
	AnimeKind_ANIME_KIND_UNSPECIFIED AnimeKind = 0 // invalid
	AnimeKind_ANIME_KIND_TV          AnimeKind = 1
	AnimeKind_ANIME_KIND_ONA         AnimeKind = 2
	AnimeKind_ANIME_KIND_OVA         AnimeKind = 3
)

// Enum value maps for AnimeKind.
var (
	AnimeKind_name = map[int32]string{
		0: "ANIME_KIND_UNSPECIFIED",
		1: "ANIME_KIND_TV",
		2: "ANIME_KIND_ONA",
		3: "ANIME_KIND_OVA",
	}
	AnimeKind_value = map[string]int32{
		"ANIME_KIND_UNSPECIFIED": 0,
		"ANIME_KIND_TV":          1,
		"ANIME_KIND_ONA":         2,
		"ANIME_KIND_OVA":         3,
	}
)

func (x AnimeKind) Enum() *AnimeKind {
	p := new(AnimeKind)
	*p = x
	return p
}

func (x AnimeKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnimeKind) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_common_proto_enumTypes[1].Descriptor()
}

func (AnimeKind) Type() protoreflect.EnumType {
	return &file_anipj_content_common_proto_enumTypes[1]
}

func (x AnimeKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnimeKind.Descriptor instead.
func (AnimeKind) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_common_proto_rawDescGZIP(), []int{1}
}

type ProductionStatus int32

const (
	ProductionStatus_PRODUCTION_STATUS_UNSPECIFIED ProductionStatus = 0
	ProductionStatus_PRODUCTION_STATUS_ANNOUNCE    ProductionStatus = 1
	ProductionStatus_PRODUCTION_STATUS_ONGOING     ProductionStatus = 2
	ProductionStatus_PRODUCTION_STATUS_RELEASED    ProductionStatus = 3
)

// Enum value maps for ProductionStatus.
var (
	ProductionStatus_name = map[int32]string{
		0: "PRODUCTION_STATUS_UNSPECIFIED",
		1: "PRODUCTION_STATUS_ANNOUNCE",
		2: "PRODUCTION_STATUS_ONGOING",
		3: "PRODUCTION_STATUS_RELEASED",
	}
	ProductionStatus_value = map[string]int32{
		"PRODUCTION_STATUS_UNSPECIFIED": 0,
		"PRODUCTION_STATUS_ANNOUNCE":    1,
		"PRODUCTION_STATUS_ONGOING":     2,
		"PRODUCTION_STATUS_RELEASED":    3,
	}
)

func (x ProductionStatus) Enum() *ProductionStatus {
	p := new(ProductionStatus)
	*p = x
	return p
}

func (x ProductionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_common_proto_enumTypes[2].Descriptor()
}

func (ProductionStatus) Type() protoreflect.EnumType {
	return &file_anipj_content_common_proto_enumTypes[2]
}

func (x ProductionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductionStatus.Descriptor instead.
func (ProductionStatus) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_common_proto_rawDescGZIP(), []int{2}
}

type Language int32

const (
	Language_LANGUAGE_UNSPECIFIED Language = 0
	Language_RU                   Language = 1
	Language_EN                   Language = 2
	Language_JA                   Language = 3
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "LANGUAGE_UNSPECIFIED",
		1: "RU",
		2: "EN",
		3: "JA",
	}
	Language_value = map[string]int32{
		"LANGUAGE_UNSPECIFIED": 0,
		"RU":                   1,
		"EN":                   2,
		"JA":                   3,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_common_proto_enumTypes[3].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_anipj_content_common_proto_enumTypes[3]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_common_proto_rawDescGZIP(), []int{3}
}

// Поддерживаемые языки для полнотекстового поиска
// ---
// Это должен быть anipj.content.v1dev.Language, но поддержка японского языка нетривиальна.
// Для postgresql в будущем можно рассмотреть pgroonga, tsja
type SearchLanguage int32

const (
	SearchLanguage_SEARCH_LANGUAGE_UNSPECIFIED SearchLanguage = 0 // invalid
	SearchLanguage_SEARCH_LANGUAGE_RUSSIAN     SearchLanguage = 1
	SearchLanguage_SEARCH_LANGUAGE_ENGLISH     SearchLanguage = 2
)

// Enum value maps for SearchLanguage.
var (
	SearchLanguage_name = map[int32]string{
		0: "SEARCH_LANGUAGE_UNSPECIFIED",
		1: "SEARCH_LANGUAGE_RUSSIAN",
		2: "SEARCH_LANGUAGE_ENGLISH",
	}
	SearchLanguage_value = map[string]int32{
		"SEARCH_LANGUAGE_UNSPECIFIED": 0,
		"SEARCH_LANGUAGE_RUSSIAN":     1,
		"SEARCH_LANGUAGE_ENGLISH":     2,
	}
)

func (x SearchLanguage) Enum() *SearchLanguage {
	p := new(SearchLanguage)
	*p = x
	return p
}

func (x SearchLanguage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchLanguage) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_common_proto_enumTypes[4].Descriptor()
}

func (SearchLanguage) Type() protoreflect.EnumType {
	return &file_anipj_content_common_proto_enumTypes[4]
}

func (x SearchLanguage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchLanguage.Descriptor instead.
func (SearchLanguage) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_common_proto_rawDescGZIP(), []int{4}
}

type EntityLink_Type int32

const (
	EntityLink_UNSPECIFIED EntityLink_Type = 0 // invalid
	EntityLink_TITLE       EntityLink_Type = 1
	EntityLink_PERSON      EntityLink_Type = 2
	EntityLink_STUDIO      EntityLink_Type = 3
	EntityLink_CHARACTER   EntityLink_Type = 4
	EntityLink_FRANCHISE   EntityLink_Type = 5
)

// Enum value maps for EntityLink_Type.
var (
	EntityLink_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "TITLE",
		2: "PERSON",
		3: "STUDIO",
		4: "CHARACTER",
		5: "FRANCHISE",
	}
	EntityLink_Type_value = map[string]int32{
		"UNSPECIFIED": 0,
		"TITLE":       1,
		"PERSON":      2,
		"STUDIO":      3,
		"CHARACTER":   4,
		"FRANCHISE":   5,
	}
)

func (x EntityLink_Type) Enum() *EntityLink_Type {
	p := new(EntityLink_Type)
	*p = x
	return p
}

func (x EntityLink_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityLink_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_anipj_content_common_proto_enumTypes[5].Descriptor()
}

func (EntityLink_Type) Type() protoreflect.EnumType {
	return &file_anipj_content_common_proto_enumTypes[5]
}

func (x EntityLink_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityLink_Type.Descriptor instead.
func (EntityLink_Type) EnumDescriptor() ([]byte, []int) {
	return file_anipj_content_common_proto_rawDescGZIP(), []int{1, 0}
}

type NameVariant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Language      Language               `protobuf:"varint,2,opt,name=language,proto3,enum=anipj.content.v1dev.Language" json:"language,omitempty"`
	OrderNumber   int32                  `protobuf:"varint,3,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"` // число для упорядочивания списка имен и выбора первичного имени; сортировка asc
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameVariant) Reset() {
	*x = NameVariant{}
	mi := &file_anipj_content_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameVariant) ProtoMessage() {}

func (x *NameVariant) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameVariant.ProtoReflect.Descriptor instead.
func (*NameVariant) Descriptor() ([]byte, []int) {
	return file_anipj_content_common_proto_rawDescGZIP(), []int{0}
}

func (x *NameVariant) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *NameVariant) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_LANGUAGE_UNSPECIFIED
}

func (x *NameVariant) GetOrderNumber() int32 {
	if x != nil {
		return x.OrderNumber
	}
	return 0
}

type EntityLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          EntityLink_Type        `protobuf:"varint,1,opt,name=type,proto3,enum=anipj.content.v1dev.EntityLink_Type" json:"type,omitempty"` // Тип сущности контента, к которой привязано
	Id            int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                              // Id сущности контента, к которой привязано
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityLink) Reset() {
	*x = EntityLink{}
	mi := &file_anipj_content_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityLink) ProtoMessage() {}

func (x *EntityLink) ProtoReflect() protoreflect.Message {
	mi := &file_anipj_content_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityLink.ProtoReflect.Descriptor instead.
func (*EntityLink) Descriptor() ([]byte, []int) {
	return file_anipj_content_common_proto_rawDescGZIP(), []int{1}
}

func (x *EntityLink) GetType() EntityLink_Type {
	if x != nil {
		return x.Type
	}
	return EntityLink_UNSPECIFIED
}

func (x *EntityLink) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_anipj_content_common_proto protoreflect.FileDescriptor

var file_anipj_content_common_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x6e,
	0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65,
	0x76, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x69, 0x70,
	0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x64, 0x65, 0x76, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x49, 0x54, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x48,
	0x41, 0x52, 0x41, 0x43, 0x54, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x52, 0x41,
	0x4e, 0x43, 0x48, 0x49, 0x53, 0x45, 0x10, 0x05, 0x2a, 0x53, 0x0a, 0x09, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x4e, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x49, 0x54, 0x4c, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x47, 0x41, 0x10, 0x02, 0x2a, 0x62, 0x0a,
	0x09, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x4e,
	0x49, 0x4d, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x4e, 0x49, 0x4d, 0x45, 0x5f,
	0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x56, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4e, 0x49,
	0x4d, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4f, 0x4e, 0x41, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x41, 0x4e, 0x49, 0x4d, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4f, 0x56, 0x41, 0x10,
	0x03, 0x2a, 0x94, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41,
	0x4e, 0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f,
	0x4e, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x3c, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06,
	0x0a, 0x02, 0x52, 0x55, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x06,
	0x0a, 0x02, 0x4a, 0x41, 0x10, 0x03, 0x2a, 0x6b, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x45, 0x41, 0x52,
	0x43, 0x48, 0x5f, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x41,
	0x52, 0x43, 0x48, 0x5f, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x55, 0x53,
	0x53, 0x49, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48,
	0x5f, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x47, 0x4c, 0x49, 0x53,
	0x48, 0x10, 0x02, 0x42, 0x29, 0x5a, 0x0d, 0x61, 0x6e, 0x69, 0x70, 0x6a, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0xaa, 0x02, 0x17, 0x41, 0x6e, 0x69, 0x70, 0x6a, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_anipj_content_common_proto_rawDescOnce sync.Once
	file_anipj_content_common_proto_rawDescData []byte
)

func file_anipj_content_common_proto_rawDescGZIP() []byte {
	file_anipj_content_common_proto_rawDescOnce.Do(func() {
		file_anipj_content_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anipj_content_common_proto_rawDesc), len(file_anipj_content_common_proto_rawDesc)))
	})
	return file_anipj_content_common_proto_rawDescData
}

var file_anipj_content_common_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_anipj_content_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_anipj_content_common_proto_goTypes = []any{
	(TitleType)(0),        // 0: anipj.content.v1dev.TitleType
	(AnimeKind)(0),        // 1: anipj.content.v1dev.AnimeKind
	(ProductionStatus)(0), // 2: anipj.content.v1dev.ProductionStatus
	(Language)(0),         // 3: anipj.content.v1dev.Language
	(SearchLanguage)(0),   // 4: anipj.content.v1dev.SearchLanguage
	(EntityLink_Type)(0),  // 5: anipj.content.v1dev.EntityLink.Type
	(*NameVariant)(nil),   // 6: anipj.content.v1dev.NameVariant
	(*EntityLink)(nil),    // 7: anipj.content.v1dev.EntityLink
}
var file_anipj_content_common_proto_depIdxs = []int32{
	3, // 0: anipj.content.v1dev.NameVariant.language:type_name -> anipj.content.v1dev.Language
	5, // 1: anipj.content.v1dev.EntityLink.type:type_name -> anipj.content.v1dev.EntityLink.Type
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_anipj_content_common_proto_init() }
func file_anipj_content_common_proto_init() {
	if File_anipj_content_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anipj_content_common_proto_rawDesc), len(file_anipj_content_common_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anipj_content_common_proto_goTypes,
		DependencyIndexes: file_anipj_content_common_proto_depIdxs,
		EnumInfos:         file_anipj_content_common_proto_enumTypes,
		MessageInfos:      file_anipj_content_common_proto_msgTypes,
	}.Build()
	File_anipj_content_common_proto = out.File
	file_anipj_content_common_proto_goTypes = nil
	file_anipj_content_common_proto_depIdxs = nil
}
